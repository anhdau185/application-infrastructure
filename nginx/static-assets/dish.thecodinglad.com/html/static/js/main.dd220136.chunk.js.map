{"version":3,"sources":["appState/actions/constants.ts","appState/reducers/appLoadingReducer.ts","appState/reducers/pingingReducer.ts","appState/reducers/apiCalls/fetchCategoriesReducer.ts","appState/reducers/apiCalls/fetchDishesReducer.ts","appState/reducers/apiCalls/index.ts","appState/reducers/index.ts","appState/epics/pingPongEpic.ts","api/constants.ts","api/categories.ts","api/dishes.ts","appState/actions/index.ts","appState/epics/fetchDishesEpic.ts","appState/epics/fetchCategoriesEpic.ts","appState/epics/index.ts","appState/store.ts","components/HomeList/styles.ts","components/HomeList/index.tsx","common/constants.ts","pages/HomePage/styles.ts","pages/HomePage/index.tsx","appState/selectors/apiCalls/fetchCategories.ts","common/hooks/useFetchCategoriesApi.ts","appState/selectors/apiCalls/fetchDishes.ts","common/hooks/useFetchDishesApi.ts","common/hooks/useCreateCategoryApi.ts","common/hooks/useCreateDishApi.ts","common/hooks/useGetCategoryApi.ts","common/hooks/useGetDishApi.ts","common/hooks/useUpdateCategoryApi.ts","common/hooks/useUpdateDishApi.ts","common/hooks/useDeleteCategoryApi.ts","common/hooks/useDeleteDishApi.ts","appState/selectors/index.ts","common/hooks/useAppLoading.ts","components/ActionMenu/index.tsx","components/CategoryItem/styles.ts","components/CategoryItem/index.tsx","common/utils.ts","components/CategoryList/index.tsx","components/CategoryForm/styles.ts","components/CategoryForm/index.tsx","components/ErrorNotice/index.tsx","pages/CategoryListingPage/styles.ts","pages/CategoryListingPage/index.tsx","components/AlbumSlider/styles.ts","components/AlbumSlider/index.tsx","components/AlbumEditor/styles.ts","components/AlbumEditor/index.tsx","components/EditableTitle/styles.ts","components/EditableTitle/index.tsx","components/EditableDescription/styles.ts","components/EditableDescription/index.tsx","components/DishItem/styles.ts","components/DishItem/index.tsx","components/DishList/index.tsx","components/CategoryAssignmentDialog/index.tsx","components/CategoryAssignment/styles.ts","components/CategoryAssignment/index.tsx","components/BackToListButton/index.tsx","pages/CategoryPage/index.tsx","components/DishForm/styles.ts","components/DishForm/index.tsx","pages/DishListingPage/styles.ts","pages/DishListingPage/index.tsx","components/EditablePlaces/styles.ts","components/EditablePlaces/index.tsx","pages/DishPage/index.tsx","pages/Playground/index.tsx","pages/index.tsx","components/AppBar/styles.ts","common/images/dish.png","components/AppBar/index.tsx","components/AppProgress/index.tsx","App.tsx","index.tsx"],"names":["SET_APP_LOADING","UPDATE_LOCAL_CATEGORIES","UPDATE_LOCAL_DISHES","FETCH_DISHES_API","FETCH_CATEGORIES_API","appLoadingReducer","handleActions","_","payload","pingingReducer","PING","PONG","fetchCategoriesReducer","state","data","error","loading","fetchDishesReducer","apiCallsReducer","combineReducers","fetchCategories","fetchDishes","rootReducer","appLoading","pinging","apiCalls","pingPongEpic","action$","pipe","ofType","pluck","switchMap","delayTime","timer","mapTo","type","BASE_URL","createCategory","category","axios","post","getCategory","id","params","get","updateCategory","patch","deleteCategory","delete","createDish","dish","getDish","updateDish","deleteDish","setAppLoadingAC","createAction","fetchDishesAC","updateLocalDishesAC","fetchCategoriesAC","updateLocalCategoriesAC","fetchDishesEpic","exhaustMap","concat","of","from","api","mergeMap","res","includedData","included","catchError","err","fetchCategoriesEpic","rootEpic","combineEpics","epicMiddleware","createEpicMiddleware","configureStore","store","createStore","composeWithDevTools","applyMiddleware","run","StyledGrid","styled","div","StyledListItem","HomeListItem","item","to","url","Typography","variant","color","title","isEmpty","description","HomeList","items","map","index","APP_ACCENT_COLOR","DEFAULT_IMAGE_URL","StyledWrapper","HOME_ITEMS","HomePage","Container","maxWidth","Grow","in","className","dataSelector","includedDataSelector","errorSelector","loadingSelector","useFetchCategoriesApi","dispatch","useDispatch","useSelector","fetchData","useCallback","useFetchDishesApi","useCreateCategoryApi","options","useState","setData","setError","setLoading","setAppLoading","useAppLoading","onSuccess","noop","onFailure","onCompletion","a","createdCategory","safeError","useCreateDishApi","createdDish","useGetCategoryApi","response","setResponse","apiResponse","useGetDishApi","useUpdateCategoryApi","useUpdateDishApi","useDeleteCategoryApi","useDeleteDishApi","appLoadingSelector","pingingSelector","value","ActionMenu","anchorElement","setAnchorElement","handleClose","IconButton","onClick","e","currentTarget","style","Menu","keepMounted","anchorEl","open","onClose","Object","keys","actionName","ActionIcon","icon","actionHandler","handler","MenuItem","ListItemIcon","minWidth","ListItemText","ImageWrapper","TimeOverlay","MoreButtonOverlay","StyledCard","Card","StyledCardActions","CardActions","CategoryDescription","CategoryItem","itemActions","history","useHistory","timeHovered","setTimeHovered","hasItemActions","categoryImage","useMemo","allImages","attributes","images","categoryAlbum","slice","getCategoryImages","creationDateTime","moment","createdAt","format","src","alt","cursor","onMouseEnter","onMouseLeave","fromNow","CardContent","gutterBottom","marginBottom","Button","size","push","Grid","CategoryList","categories","emptyText","getItemActions","itemBreakpoints","container","spacing","alignItems","undefined","CustomPaper","Paper","StyledForm","form","FormHeading","CategoryForm","name","imageUrl","formData","setFormData","clearForm","include_dishes","order_by","order_direction","isCreatingCategory","handleSubmit","preventDefault","length","window","alert","validateForm","dataToSubmit","noValidate","autoComplete","onSubmit","align","TextField","fullWidth","label","onChange","target","disabled","ErrorNotice","children","allowRetry","ResponsiveFormWrapper","ResponsiveButton","CategoryListingPage","isFetchingCategories","errorOccurred","fetchCategoriesWithOptions","categoryId","Delete","DeleteIcon","confirm","useEffect","justifyContent","xs","lg","message","href","startIcon","sm","md","CustomSwiper","Swiper","AlbumImage","img","AlbumSlider","album","modules","Navigation","Pagination","Autoplay","spaceBetween","slidesPerView","autoplay","delay","navigation","pagination","clickable","dynamicBullets","scrollbar","draggable","borderRadius","textAlign","CustomAccordion","Accordion","CustomAccordionDetails","AccordionDetails","CustomAccordionActions","AccordionActions","CustomTextField","isFirst","isLast","getTextFieldStyles","StyledIconButton","generateDisplayAlbum","actualAlbum","Array","fill","emptyValue","AlbumEditor","updateData","expanded","setExpanded","displayAlbum","setDisplayAlbum","targetIndex","newValue","newDisplayAlbum","saveAlbum","compactedDisplayAlbum","compact","isEqual","reset","AccordionSummary","expandIcon","prevValue","nextValue","placeholder","InputProps","startAdornment","InputAdornment","position","endAdornment","marginLeft","padding","val","idx","ViewModeWrapper","EditModeWrapper","EditModeButtons","StyledTextField","EditableTitle","originalValue","displayValue","setDisplayValue","editMode","setEditMode","saveNewValue","inputRef","input","focus","StyledTextArea","EditableDescription","multiline","marginTop","component","lineHeight","whiteSpace","DishItem","likeCount","liked","setLiked","dishImage","dishAlbum","getDishImages","handleClickLikeButton","dishId","put","DishList","dishes","CategoryAssignmentDialog","closeDialog","initialSelectedIds","relationships","selectedIds","setSelectedIds","isFetchingDishes","handleChange","targetId","checked","filter","handleCancel","dish_ids","include_categories","Dialog","DialogTitle","DialogContent","dividers","maxHeight","FormGroup","FormControlLabel","includes","control","Checkbox","DialogActions","autoFocus","FlexWrapper","CategoryAssignment","assignedDishes","setOpen","BackToListWrapper","BackToListButton","CategoryPage","match","isFetchingCategory","fetchCategory","dataIsReady","fetchCategoryWithOptions","RemoveIcon","margin","DishForm","places","isCreatingDish","split","trim","DishListingPage","fetchDishesWithOptions","EditablePlaces","join","showHelpText","setShowHelpText","Snackbar","action","DishPage","isFetchingDish","fetchDish","fetchDishWithOptions","Playground","isPinging","Routes","exact","path","WTDAppBar","AppBar","AppBarIcon","AppBarHeading","WhatsTheDishAppBar","React","memo","StyledProgress","LinearProgress","AppProgress","visibility","App","ReactDOM","render","document","getElementById"],"mappings":"wXACaA,GAAkB,yBAClBC,GAA0B,iCAC1BC,GAAsB,6BAKtBC,GAAmB,wBACnBC,GAAuB,4BCL9BC,GAAoBC,aAAa,gBACpCN,IAAkB,SAACO,EAAD,YAAMC,YACxB,GAEYH,MCNTI,GAAiBH,aAAkC,CACvDI,KAAM,kBAAM,GACZC,KAAM,kBAAM,KACX,GAEYF,M,SCKTG,GAAyBN,aAAa,gBAIzCL,IAA0B,SAACY,EAAD,OAAUL,EAAV,EAAUA,QAAV,oBAAC,gBAA6BK,GAAUL,MAVxB,CAC3CM,KAAM,GACNC,MAAO,KACPC,SAAS,IAUIJ,MCPTK,GAAqBX,aAAa,gBAIrCJ,IAAsB,SAACW,EAAD,OAAUL,EAAV,EAAUA,QAAV,oBAAC,gBAA6BK,GAAUL,MAVxB,CACvCM,KAAM,GACNC,MAAO,KACPC,SAAS,IAUIC,MCZTC,GAAkBC,2BAA0C,CAChEC,gBAAiBR,GACjBS,YAAaJ,KAGAC,MCNTI,GAAcH,2BAAwC,CAC1DI,WAAYlB,GACZmB,QAASf,GACTgB,SAAUP,KAGGI,M,4DCaAI,GATwB,SAAAC,GAAO,OAC5CA,EAAQC,KACNC,aAA8B,QAC9BC,aAAM,WACNC,cAAU,SAAAC,GAAS,OAAIC,aAAMD,GAAWJ,KACtCM,aAAM,CAAEC,KAAM,OAAiB3B,QAAS,a,+ECjBjC4B,GAAW,+BCaXC,GACX,SAACC,GAAD,OACEC,KAAMC,KAAN,UAAcJ,GAAd,eAAqCE,IAE5BG,GACX,SAACC,GAAD,IAAaC,EAAb,uDAA6C,GAA7C,OACEJ,KAAMK,IAAN,UAAaR,GAAb,uBAAoCM,GAAM,CAAEC,YAEnCE,GACX,SAACH,EAAYJ,GAAb,OACEC,KAAMO,MAAN,UAAeV,GAAf,uBAAsCM,GAAMJ,IAEnCS,GACX,SAACL,GAAD,OAAgCH,KAAMS,OAAN,UAAgBZ,GAAhB,uBAAuCM,KCb5DO,GAAa,SAACC,GAAD,OACxBX,KAAMC,KAAN,UAAcJ,GAAd,WAAiCc,IAEtBC,GACX,SAACT,GAAD,IAAaC,EAAb,uDAAyC,GAAzC,OACEJ,KAAMK,IAAN,UAAaR,GAAb,mBAAgCM,GAAM,CAAEC,YAE/BS,GACX,SAACV,EAAYQ,GAAb,OACEX,KAAMO,MAAN,UAAeV,GAAf,mBAAkCM,GAAMQ,IAE/BG,GACX,SAACX,GAAD,OAAgCH,KAAMS,OAAN,UAAgBZ,GAAhB,mBAAmCM,K,UCRxDY,GAAkBC,aAAavD,IAM/BwD,IAJmBD,aXjBD,wBWmBFA,aXlBD,qBWoBCA,aAAapD,KAE7BsD,GAAsBF,aAAarD,IAEnCwD,GAAoBH,aAAanD,IAEjCuD,GAA0BJ,aAAatD,ICWrC2D,GA/B8D,SAAAjC,GAAO,OAClFA,EAAQC,KACNC,aAAqC1B,IACrC2B,aAAM,UAAW,UACjB+B,cAAW,SAAAlB,GAAM,OAAImB,aACnBC,aACET,IAAgB,GAChBG,GAAoB,CAAEzC,SAAS,KAEjCgD,aFRJ,eAACrB,EAAD,uDAAiC,GAAjC,OACEJ,KAAMK,IAAN,UAAaR,GAAb,WAAgC,CAAEO,WEO3BsB,CAAgBtB,IAASf,KAC5BE,aAAM,QACNoC,cAAS,SAAAC,GAAG,OAAIJ,aACdN,GAAoB,CAClBzC,SAAS,EACTF,KAAMqD,EAAIrD,KACVsD,aAAcD,EAAIE,SAClBtD,MAAO,OAETuC,IAAgB,OAElBgB,cAAW,SAAAC,GAAG,OAAIR,aAChBN,GAAoB,CAClBzC,SAAS,EACTD,MAAK,OAAEwD,QAAF,IAAEA,IAAO,KAEhBjB,IAAgB,cCMXkB,GA/BsE,SAAA7C,GAAO,OAC1FA,EAAQC,KACNC,aAAyCzB,IACzC0B,aAAM,UAAW,UACjB+B,cAAW,SAAAlB,GAAM,OAAImB,aACnBC,aACET,IAAgB,GAChBK,GAAwB,CAAE3C,SAAS,KAErCgD,aJRJ,eAACrB,EAAD,uDAAqC,GAArC,OACEJ,KAAMK,IAAN,UAAaR,GAAb,eAAoC,CAAEO,WIO/BsB,CAAoBtB,IAASf,KAChCE,aAAM,QACNoC,cAAS,SAAAC,GAAG,OAAIJ,aACdJ,GAAwB,CACtB3C,SAAS,EACTF,KAAMqD,EAAIrD,KACVsD,aAAcD,EAAIE,SAClBtD,MAAO,OAETuC,IAAgB,OAElBgB,cAAW,SAAAC,GAAG,OAAIR,aAChBJ,GAAwB,CACtB3C,SAAS,EACTD,MAAK,OAAEwD,QAAF,IAAEA,IAAO,KAEhBjB,IAAgB,cChCpBmB,GAAWC,aACfhD,GACAkC,GACAY,IAGaC,MCLTE,GAAoEC,eAY3DC,GAVQ,WACrB,IAAMC,EAAQC,uBACZzD,GACA0D,+BAAoBC,2BAAgBN,MAItC,OAFAA,GAAeO,IAAIT,IAEZK,G,mFCdIK,GAAaC,KAAOC,IAAV,oPAcVC,GAAiBF,KAAOC,IAAV,o9B,QCPrBE,GAA6C,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACjD,eAACF,GAAD,UACE,gBAAC,KAAD,CAAMG,GAAID,EAAKE,IAAf,UACE,gBAACC,GAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,cAA/B,UACGL,EAAKM,MAAO,IADf,aAGEC,KAAQP,EAAKQ,cACb,eAACL,GAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAlC,SACGL,EAAKQ,oBAeDC,GARmC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChD,eAACf,GAAD,UACGe,EAAMC,KACL,SAACX,EAAMY,GAAP,OAAiB,eAAC,GAAD,CAAyCZ,KAAMA,GAA/C,oBAAgCY,UC3B1CC,GAAmB,UACnBC,GACX,2ECEWC,GAAgBnB,KAAOC,IAAV,grBA8BTgB,IC1BXG,GAAyB,CAC7B,CACEd,IAAK,cACLI,MAAO,qBACPE,YAAa,wCAEf,CACEN,IAAK,UACLI,MAAO,iBACPE,YAAa,4CAsBFS,GAlBY,kBACzB,eAACC,GAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAACC,GAAA,EAAD,CAAMC,IAAE,EAAR,SACE,gBAACN,GAAD,WACE,gBAACZ,GAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,cAA/B,UACE,gDACA,uBAAMiB,UAAU,WAAhB,6BACA,yCAEF,gBAACnB,GAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,cAA/B,wCAC6B,wBAD7B,yDAGA,eAAC,GAAD,CAAUK,MAAOM,a,mDC1BZO,GACX,SAAClG,GAAD,OAA8CA,EAAMY,SAASL,gBAAgBN,MAElEkG,GACX,SAACnG,GAAD,OAAsDA,EAAMY,SAASL,gBAAgBgD,cAE1E6C,GACX,SAACpG,GAAD,OAAuCA,EAAMY,SAASL,gBAAgBL,OAE3DmG,GACX,SAACrG,GAAD,OAA2CA,EAAMY,SAASL,gBAAgBJ,SCiB7DmG,GApBe,WAC5B,IAAMC,EAAWC,eAUjB,MAAO,CACLvG,KAVWwG,aAAYP,IAWvB3C,aAVmBkD,aAAYN,IAW/BjG,MAVYuG,aAAYL,IAWxBjG,QAVcsG,aAAYJ,IAW1BK,UATgBC,wBAAY,SAAC7E,GAC7ByE,EAAS1D,GAAkB,CAAEf,cAC5B,MChBQoE,GACX,SAAClG,GAAD,OAA0CA,EAAMY,SAASJ,YAAYP,MAE1DkG,GACX,SAACnG,GAAD,OAA0DA,EAAMY,SAASJ,YAAY+C,cAE1E6C,GACX,SAACpG,GAAD,OAAuCA,EAAMY,SAASJ,YAAYN,OAEvDmG,GACX,SAACrG,GAAD,OAA2CA,EAAMY,SAASJ,YAAYL,SCiBzDyG,GApBW,WACxB,IAAML,EAAWC,eAUjB,MAAO,CACLvG,KAVWwG,aAAYP,IAWvB3C,aAVmBkD,aAAYN,IAW/BjG,MAVYuG,aAAYL,IAWxBjG,QAVcsG,aAAYJ,IAW1BK,UATgBC,wBAAY,SAAC7E,GAC7ByE,EAAS5D,GAAc,CAAEb,cACxB,M,yDCuCU+E,GA1Cb,SAACC,GAAmE,IAAD,MACjE,EAAwBC,oBAA6B,MAArD,oBAAO9G,EAAP,KAAa+G,EAAb,KACA,EAA0BD,oBAAc,MAAxC,oBAAO7G,EAAP,KAAc+G,EAAd,KACA,EAA8BF,qBAAkB,GAAhD,oBAAO5G,EAAP,KAAgB+G,EAAhB,KACoBC,EAAkBC,KAA9BF,WAEFG,EAAS,iBAAGP,QAAH,IAAGA,OAAH,EAAGA,EAASO,iBAAZ,QAAyBC,KAClCC,EAAS,iBAAGT,QAAH,IAAGA,OAAH,EAAGA,EAASS,iBAAZ,QAAyBD,KAClCE,EAAY,iBAAGV,QAAH,IAAGA,OAAH,EAAGA,EAASU,oBAAZ,QAA4BF,KAExCZ,EAAYC,uBAAW,yCAAC,WAAOlF,GAAP,oBAAAgG,EAAA,6DAC5BP,GAAW,GACXC,GAAc,GAFc,kBAOhB/D,GAAmB3B,GAPH,gBAMViG,EANU,EAMxBzH,KAAQA,KAGV+G,EAAQU,GACRT,EAAS,MACTI,EAAUK,GAXgB,kDAapBC,EAboB,gCAaK,GAE/BV,EAASU,GACTJ,EAAUI,GAhBgB,yBAkB1BT,GAAW,GACXC,GAAc,GACdK,IApB0B,6EAAD,sDAsB1B,IAEH,MAAO,CACLvH,OACAC,QACAC,UACAuG,cCISkB,GA1Cb,SAACd,GAA2D,IAAD,MACzD,EAAwBC,oBAAyB,MAAjD,oBAAO9G,EAAP,KAAa+G,EAAb,KACA,EAA0BD,oBAAc,MAAxC,oBAAO7G,EAAP,KAAc+G,EAAd,KACA,EAA8BF,qBAAkB,GAAhD,oBAAO5G,EAAP,KAAgB+G,EAAhB,KACoBC,EAAkBC,KAA9BF,WAEFG,EAAS,iBAAGP,QAAH,IAAGA,OAAH,EAAGA,EAASO,iBAAZ,QAAyBC,KAClCC,EAAS,iBAAGT,QAAH,IAAGA,OAAH,EAAGA,EAASS,iBAAZ,QAAyBD,KAClCE,EAAY,iBAAGV,QAAH,IAAGA,OAAH,EAAGA,EAASU,oBAAZ,QAA4BF,KAExCZ,EAAYC,uBAAW,yCAAC,WAAOtE,GAAP,oBAAAoF,EAAA,6DAC5BP,GAAW,GACXC,GAAc,GAFc,kBAOhB/D,GAAef,GAPC,gBAMVwF,EANU,EAMxB5H,KAAQA,KAGV+G,EAAQa,GACRZ,EAAS,MACTI,EAAUQ,GAXgB,kDAapBF,EAboB,gCAaK,GAE/BV,EAASU,GACTJ,EAAUI,GAhBgB,yBAkB1BT,GAAW,GACXC,GAAc,GACdK,IApB0B,6EAAD,sDAsB1B,IAEH,MAAO,CACLvH,OACAE,UACAD,QACAwG,cCcSoB,GA/Cb,SAAChB,GAA6D,IAAD,UAC3D,EAAgCC,oBAA2C,MAA3E,oBAAOgB,EAAP,KAAiBC,EAAjB,KACA,EAA0BjB,oBAAc,MAAxC,oBAAO7G,EAAP,KAAc+G,EAAd,KACA,EAA8BF,qBAAkB,GAAhD,oBAAO5G,EAAP,KAAgB+G,EAAhB,KACoBC,EAAkBC,KAA9BF,WAEFG,EAAS,iBAAGP,QAAH,IAAGA,OAAH,EAAGA,EAASO,iBAAZ,QAAyBC,KAClCC,EAAS,iBAAGT,QAAH,IAAGA,OAAH,EAAGA,EAASS,iBAAZ,QAAyBD,KAClCE,EAAY,iBAAGV,QAAH,IAAGA,OAAH,EAAGA,EAASU,oBAAZ,QAA4BF,KAExCrH,EAAI,iBAAG8H,QAAH,IAAGA,OAAH,EAAGA,EAAU9H,YAAb,QAAqB,KACzBsD,EAAY,iBAAGwE,QAAH,IAAGA,OAAH,EAAGA,EAAUvE,gBAAb,QAAyB,GAErCkD,EAAYC,uBAAW,yCAC3B,WAAO9E,EAAYC,GAAnB,oBAAA2F,EAAA,6DACEP,GAAW,GACXC,GAAc,GAFhB,kBAKwC/D,GAAgBvB,EAAIC,GAL5D,gBAKkBmG,EALlB,EAKYhI,KAER+H,EAAYC,GACZhB,EAAS,MACTI,EAAUY,GATd,kDAWUN,EAXV,gCAWmC,GAE/BV,EAASU,GACTJ,EAAUI,GAdd,yBAgBIT,GAAW,GACXC,GAAc,GACdK,IAlBJ,6EAD2B,wDAsB3B,IAGF,MAAO,CACLvH,OACAsD,eACArD,QACAC,UACAuG,cCISwB,GA/Cb,SAACpB,GAAqD,IAAD,UACnD,EAAgCC,oBAAuC,MAAvE,oBAAOgB,EAAP,KAAiBC,EAAjB,KACA,EAA0BjB,oBAAc,MAAxC,oBAAO7G,EAAP,KAAc+G,EAAd,KACA,EAA8BF,qBAAkB,GAAhD,oBAAO5G,EAAP,KAAgB+G,EAAhB,KACoBC,EAAkBC,KAA9BF,WAEFG,EAAS,iBAAGP,QAAH,IAAGA,OAAH,EAAGA,EAASO,iBAAZ,QAAyBC,KAClCC,EAAS,iBAAGT,QAAH,IAAGA,OAAH,EAAGA,EAASS,iBAAZ,QAAyBD,KAClCE,EAAY,iBAAGV,QAAH,IAAGA,OAAH,EAAGA,EAASU,oBAAZ,QAA4BF,KAExCrH,EAAI,iBAAG8H,QAAH,IAAGA,OAAH,EAAGA,EAAU9H,YAAb,QAAqB,KACzBsD,EAAY,iBAAGwE,QAAH,IAAGA,OAAH,EAAGA,EAAUvE,gBAAb,QAAyB,GAErCkD,EAAYC,uBAAW,yCAC3B,WAAO9E,EAAYC,GAAnB,oBAAA2F,EAAA,6DACEP,GAAW,GACXC,GAAc,GAFhB,kBAKwC/D,GAAYvB,EAAIC,GALxD,gBAKkBmG,EALlB,EAKYhI,KAER+H,EAAYC,GACZhB,EAAS,MACTI,EAAUY,GATd,kDAWUN,EAXV,gCAWmC,GAE/BV,EAASU,GACTJ,EAAUI,GAdd,yBAgBIT,GAAW,GACXC,GAAc,GACdK,IAlBJ,6EAD2B,wDAsB3B,IAGF,MAAO,CACLvH,OACAsD,eACArD,QACAC,UACAuG,cCRSyB,GAxCb,SAACrB,GAAmE,IAAD,MACjE,EAAwBC,oBAA6B,MAArD,oBAAO9G,EAAP,KAAa+G,EAAb,KACA,EAA0BD,oBAAc,MAAxC,oBAAO7G,EAAP,KAAc+G,EAAd,KACA,EAA8BF,qBAAkB,GAAhD,oBAAO5G,EAAP,KAAgB+G,EAAhB,KACoBC,EAAkBC,KAA9BF,WAEFG,EAAS,iBAAGP,QAAH,IAAGA,OAAH,EAAGA,EAASO,iBAAZ,QAAyBC,KAClCC,EAAS,iBAAGT,QAAH,IAAGA,OAAH,EAAGA,EAASS,iBAAZ,QAAyBD,KAClCE,EAAY,iBAAGV,QAAH,IAAGA,OAAH,EAAGA,EAASU,oBAAZ,QAA4BF,KAExCZ,EAAYC,uBAAW,yCAAC,WAAO9E,EAAYJ,GAAnB,oBAAAgG,EAAA,6DAC5BP,GAAW,GACXC,GAAc,GAFc,kBAKoB/D,GAAmBvB,EAAIJ,GAL3C,gBAKJwG,EALI,EAKlBhI,KAAQA,KAEhB+G,EAAQiB,GACRhB,EAAS,MACTI,EAAUY,GATgB,kDAWpBN,EAXoB,gCAWK,GAE/BV,EAASU,GACTJ,EAAUI,GAdgB,yBAgB1BT,GAAW,GACXC,GAAc,GACdK,IAlB0B,6EAAD,wDAoB1B,IAEH,MAAO,CACLvH,OACAC,QACAC,UACAuG,cCIS0B,GAxCb,SAACtB,GAA2D,IAAD,MACzD,EAAwBC,oBAAyB,MAAjD,oBAAO9G,EAAP,KAAa+G,EAAb,KACA,EAA0BD,oBAAc,MAAxC,oBAAO7G,EAAP,KAAc+G,EAAd,KACA,EAA8BF,qBAAkB,GAAhD,oBAAO5G,EAAP,KAAgB+G,EAAhB,KACoBC,EAAkBC,KAA9BF,WAEFG,EAAS,iBAAGP,QAAH,IAAGA,OAAH,EAAGA,EAASO,iBAAZ,QAAyBC,KAClCC,EAAS,iBAAGT,QAAH,IAAGA,OAAH,EAAGA,EAASS,iBAAZ,QAAyBD,KAClCE,EAAY,iBAAGV,QAAH,IAAGA,OAAH,EAAGA,EAASU,oBAAZ,QAA4BF,KAExCZ,EAAYC,uBAAW,yCAAC,WAAO9E,EAAYQ,GAAnB,oBAAAoF,EAAA,6DAC5BP,GAAW,GACXC,GAAc,GAFc,kBAKoB/D,GAAevB,EAAIQ,GALvC,gBAKJ4F,EALI,EAKlBhI,KAAQA,KAEhB+G,EAAQiB,GACRhB,EAAS,MACTI,EAAUY,GATgB,kDAWpBN,EAXoB,gCAWK,GAE/BV,EAASU,GACTJ,EAAUI,GAdgB,yBAgB1BT,GAAW,GACXC,GAAc,GACdK,IAlB0B,6EAAD,wDAoB1B,IAEH,MAAO,CACLvH,OACAC,QACAC,UACAuG,cCDS2B,GArCb,SAACvB,GAAmE,IAAD,MACjE,EAA0BC,oBAAc,MAAxC,oBAAO7G,EAAP,KAAc+G,EAAd,KACA,EAA8BF,qBAAkB,GAAhD,oBAAO5G,EAAP,KAAgB+G,EAAhB,KACoBC,EAAkBC,KAA9BF,WAEFG,EAAS,iBAAGP,QAAH,IAAGA,OAAH,EAAGA,EAASO,iBAAZ,QAAyBC,KAClCC,EAAS,iBAAGT,QAAH,IAAGA,OAAH,EAAGA,EAASS,iBAAZ,QAAyBD,KAClCE,EAAY,iBAAGV,QAAH,IAAGA,OAAH,EAAGA,EAASU,oBAAZ,QAA4BF,KAExCZ,EAAYC,uBAAW,yCAAC,WAAO9E,GAAP,gBAAA4F,EAAA,6DAC5BP,GAAW,GACXC,GAAc,GAFc,kBAKpB/D,GAAmBvB,GALC,OAO1BoF,EAAS,MACTI,IAR0B,gDAUpBM,EAVoB,gCAUK,GAE/BV,EAASU,GACTJ,EAAUI,GAbgB,yBAe1BT,GAAW,GACXC,GAAc,GACdK,IAjB0B,4EAAD,sDAmB1B,IAEH,MAAO,CACLtH,QACAC,UACAuG,cCIS4B,GArCb,SAACxB,GAA2D,IAAD,MACzD,EAA0BC,oBAAc,MAAxC,oBAAO7G,EAAP,KAAc+G,EAAd,KACA,EAA8BF,qBAAkB,GAAhD,oBAAO5G,EAAP,KAAgB+G,EAAhB,KACoBC,EAAkBC,KAA9BF,WAEFG,EAAS,iBAAGP,QAAH,IAAGA,OAAH,EAAGA,EAASO,iBAAZ,QAAyBC,KAClCC,EAAS,iBAAGT,QAAH,IAAGA,OAAH,EAAGA,EAASS,iBAAZ,QAAyBD,KAClCE,EAAY,iBAAGV,QAAH,IAAGA,OAAH,EAAGA,EAASU,oBAAZ,QAA4BF,KAExCZ,EAAYC,uBAAW,yCAAC,WAAO9E,GAAP,gBAAA4F,EAAA,6DAC5BP,GAAW,GACXC,GAAc,GAFc,kBAKpB/D,GAAevB,GALK,OAO1BoF,EAAS,MACTI,IAR0B,gDAUpBM,EAVoB,gCAUK,GAE/BV,EAASU,GACTJ,EAAUI,GAbgB,yBAe1BT,GAAW,GACXC,GAAc,GACdK,IAjB0B,4EAAD,sDAmB1B,IAEH,MAAO,CACLtH,QACAC,UACAuG,cCnDO6B,GACX,SAACvI,GAAD,OAA2CA,EAAMU,YAEtC8H,GACX,SAACxI,GAAD,OAA2CA,EAAMW,SCkBpCyG,GAXO,WACpB,IAAMb,EAAWC,eAOjB,MAAO,CAAErG,QANOsG,aAAY8B,IAMVrB,WAJCP,wBAAY,SAAC8B,GAC9BlC,EAAS9D,GAAgBgG,MACxB,M,+GC2DUC,GA3D+B,SAAC,GAGxC,IAFLrD,EAEI,EAFJA,MAEI,IADJL,aACI,MADI,gBACJ,EACJ,EACE+B,oBAAmC,MADrC,oBAAO4B,EAAP,KAAsBC,EAAtB,KAOMC,EAAc,kBAAMD,EAAiB,OAE3C,OACE,uCACE,eAACE,GAAA,EAAD,CACE,aAAW,OACX,gBAAc,mBACd,gBAAc,OACdC,QAZc,SAACC,GACnBJ,EAAiBI,EAAEC,gBAYfC,MAAO,CAAElE,SALX,SAOE,eAAC,KAAD,MAEF,eAACmE,GAAA,EAAD,CACEC,aAAW,EACXvH,GAAG,mBACHwH,SAAUV,EACVW,OAAQX,EACRY,QAASV,EALX,SAOGW,OAAOC,KAAKpE,GAAOC,KAAI,SAACoE,EAAoBnE,GAC3C,MAGIF,EAAMqE,GAFFC,EADR,EACEC,KACSC,EAFX,EAEEC,QAGF,OACE,gBAACC,GAAA,EAAD,CAEEhB,QAAS,WACPF,IACIgB,GAAeA,KAJvB,UAOGF,GACC,eAACK,GAAA,EAAD,CAAcd,MAAO,CAAEe,SAAU,IAAjC,SACE,eAACN,EAAD,MAGJ,eAACO,GAAA,EAAD,UAAeR,MAZjB,UACUnE,EADV,YACmBmE,a,oBCrDlBS,GAAe5F,KAAOC,IAAV,8YAuBZ4F,GAAc7F,KAAOC,IAAV,iHAQX6F,GAAoB9F,KAAOC,IAAV,kHAQjB8F,GAAa/F,aAAOgG,KAAPhG,CAAH,4VAeViG,GAAoBjG,aAAOkG,KAAPlG,CAAH,kIAQjBmG,GAAsBnG,aAAOO,KAAPP,CAAH,sGCqBjBoG,GA9DmC,SAAC,GAA+B,IAA7BlJ,EAA4B,EAA5BA,SAAUmJ,EAAkB,EAAlBA,YACvDC,EAAUC,eAChB,EAAsC/D,qBAAkB,GAAxD,oBAAOgE,EAAP,KAAoBC,EAApB,KACMC,EAAgC,MAAfL,EAEjBM,EAAgBC,oBACpB,kCC1B6B,SAAC1J,GAChC,IAAM2J,EAAY3J,EAAS4J,WAAWC,OAEtC,OAAIpG,KAAQkG,GAAmB,CAAEG,cAAe,IAEzC,CACLL,cAAeE,EAAU,GACzBG,cAAeH,EAAUI,MAAM,IDmBzBC,CAAkBhK,GAAUyJ,qBAAlC,QAAmDzF,KACnD,CAAChE,IAGGiK,EAAmBP,oBACvB,kBAAMQ,KAAOlK,EAAS4J,WAAWO,WAAWC,OAAO,wBACnD,CAACpK,EAAS4J,WAAWO,YAGvB,OACE,gBAACtB,GAAD,WACE,eAACH,GAAD,UACE,sBACE2B,IAAKZ,EACLjG,MAAOxD,EAAS4J,WAAWpG,MAC3B8G,IAAKtK,EAAS4J,WAAWpG,UAG7B,eAACmF,GAAD,UACE,eAACtF,GAAA,EAAD,CACEC,QAAQ,QACRmE,MAAO,CAAE8C,OAAQ,WACjBC,aAAc,kBAAMjB,GAAe,IACnCkB,aAAc,kBAAMlB,GAAe,IAJrC,SAMGD,EACGW,EACAC,KAAOlK,EAAS4J,WAAWO,WAAWO,cAG7ClB,GACC,eAACZ,GAAD,UACE,eAAC,GAAD,CAAYrF,MAAM,QAAQK,MAAOuF,MAGrC,gBAACwB,GAAA,EAAD,WACE,eAACtH,GAAA,EAAD,CAAYC,QAAQ,KAAKsH,cAAY,EAACnD,MAAO,CAAEoD,aAAc,SAA7D,SACG7K,EAAS4J,WAAWpG,QAEvB,eAACyF,GAAD,CAAqB3F,QAAQ,QAAQC,MAAM,gBAA3C,SACGvD,EAAS4J,WAAWlG,iBAGzB,eAACqF,GAAD,UACE,eAAC+B,GAAA,EAAD,CACEC,KAAK,QACLxH,MAAM,UACN+D,QAAS,kBAAM8B,EAAQ4B,KAAR,sBAA4BhL,EAASI,MAHtD,gCEhEFyC,GAAaC,aAAOmI,KAAPnI,CAAH,2EAsCDoI,GA1BmC,SAAC,GAK5C,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,eACAC,EACI,EADJA,gBAEM9B,EAAmC,MAAlB6B,EAEvB,OAAO5H,KAAQ0H,GACb,eAAC9H,GAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAlC,SACG6H,GAAa,2BAGhB,eAAC,GAAD,CAAYG,WAAS,EAACC,QAAS,EAAGC,WAAW,UAA7C,SACGN,EAAWtH,KAAI,SAAA7D,GAAQ,OACtB,eAACiL,GAAA,EAAD,2BAAM/H,MAAI,GAAqCoI,GAA/C,aACE,eAAC,GAAD,CACEtL,SAAUA,EACVmJ,YAAaK,EAAiB6B,EAAerL,EAASI,SAAMsL,MAHhE,mBAA4B1L,EAASI,W,oBClChCuL,GAAc7I,aAAO8I,KAAP9I,CAAH,0aAoBX+I,GAAa/I,KAAOgJ,KAAV,kHAQVC,GAAcjJ,aAAOO,KAAPP,CAAH,yFCuITkJ,GA/HgB,WAC7B,MAAgC1G,oBAA2B,CACzD2G,KAAM,GACNzI,MAAO,GACPE,YAAa,GACbwI,SAAU,KAJZ,oBAAOC,EAAP,KAAiBC,EAAjB,KAOMC,EAAYnH,wBAAY,WAC5BkH,EAAY,CACVH,KAAM,GACNzI,MAAO,GACPE,YAAa,GACbwI,SAAU,OAEX,IAEgBpN,EAAoB+F,KAA/BI,UACR,EACEG,GAAqB,CACnBQ,UAAW,WACTyG,IACAvN,EAAgB,CACdwN,gBAAgB,EAChBC,SAAU,QACVC,gBAAiB,WAPRC,EAAjB,EAAQ/N,QAAwCqB,EAAhD,EAAqCkF,UAY/ByH,EAAexH,wBAAY,SAACqC,GAEhC,GADAA,EAAEoF,iBAvDe,SAACR,GACpB,OAAKA,EAASF,KAKVE,EAASF,KAAKW,OAAS,IACzBC,OAAOC,MAAM,oDACN,GAGLX,EAAS3I,MAAMoJ,OAAS,IAC1BC,OAAOC,MAAM,gDACN,KAGLX,EAASzI,YAAYkJ,OAAS,OAChCC,OAAOC,MAAM,sDACN,IAhBPD,OAAOC,MAAM,uCACN,GAqDFC,CAAaZ,GAAlB,CAEA,IAAMa,EAA4B,CAChCpD,WAAY,CACVqC,KAAME,EAASF,KACfzI,MAAO2I,EAAS3I,OAAS2I,EAASF,KAClCvI,YAAayI,EAASzI,YACtBmG,OAAQsC,EAASD,SAAW,CAACC,EAASD,UAAY,KAGtDnM,EAAeiN,MACd,CAACb,IAEJ,OACE,eAACR,GAAD,UACE,gBAACE,GAAD,CACEzL,GAAG,gBACH6M,YAAU,EACVC,aAAa,MACbC,SAAUT,EAJZ,UAME,eAACX,GAAD,CAAazI,QAAQ,KAAK8J,MAAM,SAAhC,SACGX,EAAqB,4BAA8B,sBAEtD,eAACY,GAAA,EAAD,CACEC,WAAS,EACTrB,KAAK,OACLsB,MAAM,iBACNjK,QAAQ,WACR0D,MAAOmF,EAASF,KAChBuB,SAAU,SAACjG,GACT6E,EAAY,6BAAKD,GAAN,IAAgBF,KAAM1E,EAAEkG,OAAOzG,UAE5C0G,SAAUjB,IAEZ,eAACY,GAAA,EAAD,CACEC,WAAS,EACTrB,KAAK,QACLsB,MAAM,oBACNjK,QAAQ,WACR0D,MAAOmF,EAAS3I,MAChBgK,SAAU,SAACjG,GACT6E,EAAY,6BAAKD,GAAN,IAAgB3I,MAAO+D,EAAEkG,OAAOzG,UAE7C0G,SAAUjB,IAEZ,eAACY,GAAA,EAAD,CACEC,WAAS,EACTrB,KAAK,cACLsB,MAAM,cACNjK,QAAQ,WACR0D,MAAOmF,EAASzI,YAChB8J,SAAU,SAACjG,GACT6E,EAAY,6BAAKD,GAAN,IAAgBzI,YAAa6D,EAAEkG,OAAOzG,UAEnD0G,SAAUjB,IAEZ,eAACY,GAAA,EAAD,CACEC,WAAS,EACTrB,KAAK,WACLsB,MAAM,qBACNjK,QAAQ,WACR0D,MAAOmF,EAASD,SAChBsB,SAAU,SAACjG,GACT6E,EAAY,6BAAKD,GAAN,IAAgBD,SAAU3E,EAAEkG,OAAOzG,UAEhDS,MAAO,CAAEoD,aAAc,IACvB6C,SAAUjB,IAEZ,eAAC3B,GAAA,EAAD,CACEwC,WAAS,EACTzN,KAAK,SACLyD,QAAQ,YACRC,MAAM,UACNwH,KAAK,QACLtD,MAAO,CAAEoD,aAAc,IACvB6C,SAAUjB,EAPZ,SASGA,EAAqB,gBAAkB,WAE1C,eAAC3B,GAAA,EAAD,CACEwC,WAAS,EACThK,QAAQ,YACRC,MAAM,YACNwH,KAAK,QACLzD,QAAS+E,EACTqB,SAAUjB,EANZ,yBChIOkB,GApB2D,SAAC,GAGpE,IAFLC,EAEI,EAFJA,SACA3I,EACI,EADJA,UAEM4I,EAA0B,MAAb5I,EAEnB,OACE,uBAAKwC,MAAO,CAAEoD,aAAc,QAA5B,UACE,eAACxH,GAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,gBAAgBkE,MAAO,CAAEoD,aAAc,UAAtE,SACG+C,IAEFC,GACC,eAAC/C,GAAA,EAAD,CAAQxH,QAAQ,YAAYC,MAAM,UAAU+D,QAASrC,EAArD,2BCZK6I,GAAwBhL,KAAOC,IAAV,qFAEnB,qBAAGrE,QAAwB,OAAS,WAItCqP,GAAmBjL,aAAOgI,KAAPhI,CAAH,+JCsFdkL,GAlFuB,WACpC,MAKInJ,KAJS/F,EADb,EACEmG,UACSgJ,EAFX,EAEEvP,QACMyM,EAHR,EAGE3M,KACAC,EAJF,EAIEA,MAGIyP,EAAyB,MAATzP,EAChB0P,EAA6BjJ,wBAAY,WAC7CpG,EAAgB,CACdwN,gBAAgB,EAChBC,SAAU,QACVC,gBAAiB,UAElB,IAEgB/L,EAAmBmG,GAAqB,CACzDhB,UAAWuI,IADLlJ,UAIFoG,EAAiBnG,wBACrB,SAACkJ,GAAD,MAA0C,CACxCC,OAAQ,CACNlG,KAAMmG,KACNjG,QAAS,WACHwE,OAAO0B,QAAQ,0BAA0B9N,EAAe2N,QAIlE,IAOF,OAJAI,sBAAU,WACRL,MACC,IAGD,eAAC/J,GAAA,EAAD,CAAWC,SAAS,KAAKoD,MAAO,CAAEoD,aAAc,QAAhD,SACE,eAACvG,GAAA,EAAD,CAAMC,IAAE,EAAR,SACE,eAACH,GAAA,EAAD,UACE,gBAAC6G,GAAA,EAAD,CACEM,WAAS,EACTkD,eAAe,gBACfhD,WAAW,UACXD,QAAS,EAJX,UAME,gBAACP,GAAA,EAAD,CAAM/H,MAAI,EAACwL,GAAI,GAAIC,GAAI,EAAvB,UACGT,GACC,gBAAC,GAAD,CAAajJ,UAAWkJ,EAAxB,6DAEQ,OAAL1P,QAAK,IAALA,OAAA,EAAAA,EAAOmQ,SAAP,mBAAsBnQ,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOmQ,QAA7B,KAA0C,GAF7C,OAKF,eAACb,GAAD,CACEc,KAAK,iBACLvL,QAAQ,OACRC,MAAM,UACNuL,UAAW,eAAC,KAAD,IACXpB,SAAUO,EALZ,+BASA,eAAC,GAAD,CACE9C,WAAYA,EACZC,UAAW6C,EAAoB,uCAAuCvC,EACtEL,eAAgBA,EAChBC,gBAAiB,CAAEoD,GAAI,GAAIK,GAAI,EAAGC,GAAI,EAAGL,GAAI,QAGjD,eAAC1D,GAAA,EAAD,CAAM/H,MAAI,EAACwL,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACb,GAAD,CAAuBpP,QAASuP,EAAhC,SACE,eAAC,GAAD,kB,wCChFHgB,GAAenM,aAAOoM,KAAPpM,CAAH,4cAsBTiB,IAIHoL,GAAarM,KAAOsM,IAAV,sHCQRC,I,qBA1BoC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpD,OACE,gBAACL,GAAD,CACEM,QAAS,CAACC,KAAYC,KAAYC,MAClCC,aAAc,GACdC,cAAe,EACfC,SAAU,CAAEC,MAAO,KACnBC,YAAU,EACVC,WAAY,CAAEC,WAAW,EAAMC,gBAAgB,GAC/CC,UAAW,CAAEC,WAAW,GACxB3I,MAAO,CAAE4I,aAAc,IARzB,UAUG5M,KAAQ6L,IACP,eAAC,KAAD,CAAa7H,MAAO,CAAE6I,UAAW,UAAjC,SACE,eAACnB,GAAD,CAAY9E,IAAKrG,OAGpBsL,EAAMzL,KAAI,SAACX,EAAMY,GAAP,OACT,eAAC,KAAD,CAAyC2D,MAAO,CAAE6I,UAAW,UAA7D,SACE,eAACnB,GAAD,CAAY9E,IAAKnH,KADnB,qBAAgCY,Y,8KCtB3ByM,GAAkBzN,aAAO0N,KAAP1N,CAAH,qdA2Bf2N,GAAyB3N,aAAO4N,KAAP5N,CAAH,gHAQtB6N,GAAyB7N,aAAO8N,KAAP9N,CAAH,qHAmBtB+N,GAAkB/N,aAAOuK,KAAPvK,CAAH,gGAEtB,mBARqB,SAACgO,EAAkBC,GAC5C,OAAID,EAAgB,sBAChBC,EAAe,sCACZ,oBAKsBC,CAAzB,EAAGF,QAAH,EAAYC,WAQLE,GAAmBnO,aAAOuE,KAAPvE,CAAH,uGC/BvBoO,GAAuB,SAACC,GAAD,OAC3BC,MAHyB,GAGSC,KAAK,IAAIxN,KACzC,SAACyN,EAAYxN,GAAb,OAAuBqN,EAAYrN,IAAUwN,MA8GlCC,GA3GiC,SAAC,GAA0B,IAAxB/S,EAAuB,EAAvBA,KAAMgT,EAAiB,EAAjBA,WACjDL,EAAc3S,EAAKoL,WAAWC,OACpC,EAAgCvE,qBAAkB,GAAlD,oBAAOmM,EAAP,KAAiBC,EAAjB,KACA,EAAwCpM,oBACtC4L,GAAqBC,IADvB,oBAAOQ,EAAP,KAAqBC,EAArB,KAIMpE,EAAWtI,wBACf,SAAC2M,GAAD,OAAyB,SAACtK,GACxB,IAAMuK,EAAWvK,EAAEkG,OAAOzG,MACpB+K,EAAkBJ,EAAa9N,KACnC,SAACmD,EAAOlD,GAAR,OAAkBA,IAAU+N,EAAcC,EAAW9K,KAEvD4K,EAAgBG,MAElB,CAACJ,IAGGK,EAAY9M,wBAAY,WAC5BwM,GAAY,GACZ,IAAMO,EAAwBC,KAAQP,GAEtC,IAAIQ,KAAQF,EAAuBd,GAAnC,CAEA,IAAMnE,EAA8B,CAClCpD,WAAY,CACVC,OAAQoI,IAGZT,EAAWhT,EAAK4B,GAAI4M,MACnB,CAAC2E,EAAcnT,EAAK4B,KAEjBgS,EAAQlN,wBAAY,WACxBwM,GAAY,GACZE,EAAgBV,GAAqBC,MACpC,CAACA,IAEJ,OACE,gBAACZ,GAAD,CAAiBkB,SAAUA,EAAUjE,SAAU,kBAAMkE,GAAaD,IAAlE,UACE,eAACY,GAAA,EAAD,CAAkBC,WAAY,eAAC,KAAD,IAA9B,SACE,eAACjP,GAAA,EAAD,CAAYC,QAAQ,KAApB,6BAEF,eAACmN,GAAD,UACGkB,EAAa9N,KAAI,SAACmD,EAAOlD,GACxB,IAAMgN,EAAoB,IAAVhN,EACViN,EAASjN,IAAU6N,EAAa/E,OAAS,EACzC2F,EAAYZ,EAAa7N,EAAQ,GACjC0O,EAAYb,EAAa7N,EAAQ,GAEjC4J,GACHjK,KAAQ+O,KAAgB1B,GAAWrN,KAAQuD,IAAUvD,KAAQ8O,GAE1DE,EAAe/E,OAEjBhC,EADCoF,EAAU,+BAAiC,0BAGhD,OACE,eAACD,GAAD,CAEEC,QAASA,EACTC,OAAQA,EACRhG,KAAK,QACLzH,QAAQ,WACRoK,SAAUA,EACVH,MAAOuD,EAAU,qBAAkBpF,EACnC+G,YAAaA,EACbC,WAAY,CACVC,eACE,eAACC,GAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,eAAC,KAAD,MAGJC,aACE,eAACF,GAAA,EAAD,CAAgBC,SAAS,MAAMpL,MAAO,CAAEsL,WAAY,GAApD,SACE,eAAC1L,GAAA,EAAD,CACEI,MAAO,CAAEuL,QAAS,GAClBtF,SAAUA,EACVpG,QAAS,WACP,IAAMyK,EAAkBJ,EAAa9N,KACnC,SAACoP,EAAKC,GAAN,OAAcA,IAAQpP,EAAQ,GAAKmP,KAErCrB,EAAgBG,IAPpB,SAUE,eAAC,KAAD,SAKR/K,MAAOA,EACPwG,SAAUA,EAAS1J,IAjCrB,oBACoBA,SAqC1B,gBAAC6M,GAAD,WACE,eAACM,GAAD,CAAkB3J,QAAS0K,EAA3B,SACE,eAAC,KAAD,MAEF,eAACf,GAAD,CAAkB3J,QAAS8K,EAA3B,SACE,eAAC,KAAD,a,oBChJGe,GAAkBrQ,KAAOC,IAAV,sHAOfqQ,GAAkBtQ,KAAOC,IAAV,+OAafsQ,GAAkBvQ,KAAOC,IAAV,2GAQfuQ,GAAkBxQ,aAAOuK,KAAPvK,CAAH,uEAMfmO,GAAmBnO,aAAOuE,KAAPvE,CAAH,uFCqDdyQ,GA/DqC,SAAC,GAA0B,IAAxB/U,EAAuB,EAAvBA,KAAMgT,EAAiB,EAAjBA,WACrDgC,EAAgBhV,EAAKoL,WAAWpG,MACtC,EAAwC8B,oBAAiBkO,GAAzD,oBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgCpO,qBAAkB,GAAlD,oBAAOqO,EAAP,KAAiBC,EAAjB,KAYMC,EAAe3O,wBAAY,WAG/B,GAFA0O,GAAY,GAERH,IAAiBD,EAArB,CACA,GAAI/P,KAAQgQ,GAGV,OAFA5G,OAAOC,MAAM,iCACb4G,EAAgBF,GAIlB,IAAMxG,EAA8B,CAClCpD,WAAY,CACVpG,MAAOiQ,IAGXjC,EAAWhT,EAAK4B,GAAI4M,MACnB,CAACxO,EAAK4B,GAAIqT,EAAcD,IAE3B,OAAOG,EACL,gBAACP,GAAD,WACE,eAACE,GAAD,CACEvI,KAAK,SACLzH,QAAQ,WACR0D,MAAOyM,EACPjG,SA1BJ,SAACjG,GAAD,OAA4CmM,EAAgBnM,EAAEkG,OAAOzG,QA2BjE8M,SAAU,SAACC,GACLA,GAAOA,EAAMC,WAGrB,gBAACX,GAAD,WACE,eAAC,GAAD,CAAkB/L,QAASuM,EAA3B,SACE,eAAC,KAAD,MAEF,eAAC,GAAD,CAAkBvM,QAzCH,WACnBsM,GAAY,GACZF,EAAgBF,IAuCZ,SACE,eAAC,KAAD,YAKN,gBAACL,GAAD,WACE,eAAC9P,GAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BmQ,IAC1B,eAAC,GAAD,CAAkBnM,QAnDA,kBAAMsM,GAAY,IAmDMnM,MAAO,CAAEsL,WAAY,GAA/D,SACE,eAAC,KAAD,UCjFK9B,GAAmBnO,aAAOuE,KAAPvE,CAAH,uFAOhBmR,GAAiBnR,aAAOuK,KAAPvK,CAAH,mNAgBdqQ,GAAkBrQ,KAAOC,IAAV,kTAoBfqQ,GAAkBtQ,KAAOC,IAAV,oGCoDbmR,GAxEiD,SAAC,GAG1D,IAAD,EAFJ1V,EAEI,EAFJA,KACAgT,EACI,EADJA,WAEMgC,EAAa,UAAGhV,EAAKoL,WAAWlG,mBAAnB,QAAkC,GACrD,EAAwC4B,oBAAiBkO,GAAzD,oBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgCpO,qBAAkB,GAAlD,oBAAOqO,EAAP,KAAiBC,EAAjB,KAYMC,EAAe3O,wBAAY,WAG/B,GAFA0O,GAAY,GAERH,IAAiBD,EACrB,IAAI/P,KAAQgQ,IAAkB5G,OAAO0B,QAAQ,0BAA7C,CAKA,IAAMvB,EAA8B,CAClCpD,WAAY,CACVlG,YAAa+P,IAGjBjC,EAAWhT,EAAK4B,GAAI4M,QATlB0G,EAAgBF,KAUjB,CAAChV,EAAK4B,GAAIqT,EAAcD,IAE3B,OAAOG,EACL,gBAAC,GAAD,WACE,eAACM,GAAD,CACEE,WAAS,EACT7Q,QAAQ,WACR0D,MAAOyM,EACPjG,SAzBJ,SAACjG,GAAD,OAA+CmM,EAAgBnM,EAAEkG,OAAOzG,QA0BpE8M,SAAU,SAACC,GACLA,GAAOA,EAAMC,WAGrB,uBAAKvM,MAAO,CAAE2M,UAAW,GAAzB,UACE,eAAC,GAAD,CAAkB9M,QAASuM,EAA3B,SACE,eAAC,KAAD,MAEF,eAAC,GAAD,CAAkBvM,QAxCH,WACnBsM,GAAY,GACZF,EAAgBF,IAsCZ,SACE,eAAC,KAAD,YAKN,gBAAC,GAAD,WACE,eAACnQ,GAAA,EAAD,CACEC,QAAQ,QACRC,MAAM,gBACN8Q,UAAU,MACV5M,MAAO,CAAE6M,WAAY,SAAUC,WAAY,YAJ7C,SAMGd,GAAgB,oBAEnB,eAAC,GAAD,CAAkBnM,QAzDA,kBAAMsM,GAAY,IAyDMnM,MAAO,CAAEsL,WAAY,GAA/D,SACE,eAAC,KAAD,U,0CCzFKrK,GAAe5F,KAAOC,IAAV,8YAuBZ4F,GAAc7F,KAAOC,IAAV,iHAQX6F,GAAoB9F,KAAOC,IAAV,kHAQjB8F,GAAa/F,aAAOgG,KAAPhG,CAAH,4VAeViG,GAAoBjG,aAAOkG,KAAPlG,CAAH,kIAQjBmG,GAAsBnG,aAAOO,KAAPP,CAAH,sGAMnBmO,GAAmBnO,aAAOuE,KAAPvE,CAAH,uFCqCd0R,GAhF2B,SAAC,GAAgC,IAA9B5T,EAA6B,EAA7BA,KAA6B,IAAvBuI,mBAAuB,MAAT,GAAS,EAClEC,EAAUC,eAChB,EAAsC/D,qBAAkB,GAAxD,oBAAOgE,EAAP,KAAoBC,EAApB,KACA,EAA0BjE,oBAAkB1E,EAAKgJ,WAAW6K,UAAY,GAAxE,oBAAOC,EAAP,KAAcC,EAAd,KACMnL,EAAgC,MAAfL,EAEjByL,EAAYlL,oBAChB,kChBpByB,SAAC9I,GAC5B,IAAM+I,EAAY/I,EAAKgJ,WAAWC,OAElC,OAAIpG,KAAQkG,GAAmB,CAAEkL,UAAW,IAErC,CACLD,UAAWjL,EAAU,GACrBkL,UAAWlL,EAAUI,MAAM,IgBarB+K,CAAclU,GAAMgU,iBAA1B,QAAuC5Q,KACvC,CAACpD,IAGGqJ,EAAmBP,oBACvB,kBAAMQ,KAAOtJ,EAAKgJ,WAAWO,WAAWC,OAAO,wBAC/C,CAACxJ,EAAKgJ,WAAWO,YAGb4K,EAAwB7P,wBAAY,WACxC,I5CXuB9E,E4CWjB4U,EAASpU,EAAKR,GAEhBsU,G5CbmBtU,E4CcN4U,E5CbnB/U,KAAMgV,IAAN,UAAanV,GAAb,mBAAgCM,EAAhC,aAJsB,SAACA,GACvBH,KAAMgV,IAAN,UAAanV,GAAb,mBAAgCM,EAAhC,U4CkBIuB,CAAaqT,GAEfL,GAAUD,KACT,CAAC9T,EAAKR,GAAIsU,IAEb,OACE,gBAAC,GAAD,WACE,eAAC,GAAD,UACE,sBACErK,IAAKuK,EACLpR,MAAO5C,EAAKgJ,WAAWpG,MACvB8G,IAAK1J,EAAKgJ,WAAWpG,UAGzB,eAAC,GAAD,UACE,eAACH,GAAA,EAAD,CACEC,QAAQ,QACRmE,MAAO,CAAE8C,OAAQ,WACjBC,aAAc,kBAAMjB,GAAe,IACnCkB,aAAc,kBAAMlB,GAAe,IAJrC,SAMGD,EACGW,EACAC,KAAOtJ,EAAKgJ,WAAWO,WAAWO,cAGzClB,GACC,eAAC,GAAD,UACE,eAAC,GAAD,CAAYjG,MAAM,QAAQK,MAAOuF,MAGrC,gBAACwB,GAAA,EAAD,WACE,eAACtH,GAAA,EAAD,CAAYC,QAAQ,KAAKsH,cAAY,EAACnD,MAAO,CAAEoD,aAAc,SAA7D,SACGjK,EAAKgJ,WAAWpG,QAEnB,eAAC,GAAD,CAAqBF,QAAQ,QAAQC,MAAM,gBAA3C,SACG3C,EAAKgJ,WAAWlG,iBAGrB,gBAAC,GAAD,WACE,eAACoH,GAAA,EAAD,CACEC,KAAK,QACLxH,MAAM,UACN+D,QAAS,kBAAM8B,EAAQ4B,KAAR,kBAAwBpK,EAAKR,MAH9C,0BAOA,eAAC,GAAD,CACEmD,MAAM,YACN+D,QAASyN,EAFX,SAIGL,EAAQ,eAAC,KAAD,IAAmB,eAAC,KAAD,aC3FhC7R,GAAaC,aAAOmI,KAAPnI,CAAH,2EAsCDoS,GA1B2B,SAAC,GAKpC,IAJLC,EAII,EAJJA,OACA/J,EAGI,EAHJA,UACAC,EAEI,EAFJA,eACAC,EACI,EADJA,gBAEM9B,EAAmC,MAAlB6B,EAEvB,OAAO5H,KAAQ0R,GACb,eAAC9R,GAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAlC,SACG6H,GAAa,uBAGhB,eAAC,GAAD,CAAYG,WAAS,EAACC,QAAS,EAAGC,WAAW,UAA7C,SACG0J,EAAOtR,KAAI,SAAAjD,GAAI,OACd,eAACqK,GAAA,EAAD,2BAAM/H,MAAI,GAA6BoI,GAAvC,aACE,eAAC,GAAD,CACE1K,KAAMA,EACNuI,YAAaK,EAAiB6B,EAAezK,EAAKR,SAAMsL,MAH5D,eAAwB9K,EAAKR,W,oGC6EtBgV,GAtF2D,SAAC,GAKpE,IAJLvN,EAII,EAJJA,KACAwN,EAGI,EAHJA,YACA7W,EAEI,EAFJA,KACAgT,EACI,EADJA,WAEM8D,EAAqB5L,oBACzB,8CAAMlL,EAAK+W,qBAAX,aAAM,EAAoBJ,OAAO3W,KAAKqF,KAAI,SAAAX,GAAI,OAAIA,EAAK9C,aAAvD,QAA8D,KAC9D,CAAC5B,IAGH,EAAsC8G,oBAAmB,IAAzD,oBAAOkQ,EAAP,KAAoBC,EAApB,KACA,EACEtQ,KADYgQ,EAAd,EAAQ3W,KAAuBkX,EAA/B,EAAsBhX,QAAsCK,EAA5D,EAAiDkG,UAG3C0Q,EAAezQ,wBACnB,SAAC0Q,GAAD,OACE,SAAC3X,EAAwC4X,GAErCJ,EADEI,EACa,GAAD,oBAAKL,GAAL,CAAkBI,IAEjBJ,EAAYM,QAAO,SAAA1V,GAAE,OAAIA,IAAOwV,SAErD,CAACJ,IAGGO,EAAe7Q,wBAAY,WAC/BuQ,EAAeH,GACfD,MACC,CAACC,IAEE5I,EAAexH,wBAAY,WAC/B,IAAM8H,EAAmC,CACvCpD,WAAY,CACVoM,SAAUR,IAGdhE,EAAWhT,EAAK4B,GAAI4M,GACpBqI,MACC,CAAC7W,EAAK4B,GAAIoV,IAeb,OAbAhH,sBAAU,WACJ3G,GAAQpE,KAAQ0R,IAClBpW,EAAY,CACVkX,oBAAoB,EACpB1J,SAAU,QACVC,gBAAiB,UAEpB,CAAC3E,EAAMsN,IAEV3G,sBAAU,WACRiH,EAAeH,KACd,CAACA,IAGF,gBAACY,GAAA,EAAD,CAAQ7R,SAAS,KAAKwD,KAAMA,EAA5B,UACE,eAACsO,GAAA,EAAD,4CACA,eAACC,GAAA,EAAD,CAAeC,UAAQ,EAAC5O,MAAO,CAAE6O,UAAW,KAA5C,SACE,gBAACC,GAAA,EAAD,WACG9S,KAAQ0R,IAAWO,GAClB,eAACrS,GAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAlC,sDAID4R,EAAOtR,KAAI,SAAAX,GAAI,OACd,eAACsT,GAAA,EAAD,CAEEjJ,MAAOrK,EAAK0G,WAAWpG,MACvBqS,QAASY,KAASvT,EAAK9C,GAAIoV,GAC3BkB,QAAS,eAACC,GAAA,EAAD,CAAUpT,MAAM,YAAYiK,SAAUmI,EAAazS,EAAK9C,OAH5D8C,EAAK9C,YAQlB,gBAACwW,GAAA,EAAD,WACE,eAAC9L,GAAA,EAAD,CAAQ+L,WAAS,EAACvT,QAAQ,OAAOC,MAAM,UAAU+D,QAASyO,EAA1D,oBAGA,eAACjL,GAAA,EAAD,CAAQxH,QAAQ,YAAYC,MAAM,UAAU+D,QAASoF,EAArD,yBCxGKoK,GAAchU,KAAOC,IAAV,kUC0DTgU,GAvC+C,SAAC,GAKxD,IAJL/W,EAII,EAJJA,SACAgX,EAGI,EAHJA,eACAzW,EAEI,EAFJA,eACA8K,EACI,EADJA,eAEA,EAAwB/F,qBAAkB,GAA1C,oBAAOuC,EAAP,KAAaoP,EAAb,KAEA,OACE,uCACE,gBAACH,GAAD,WACE,eAACzT,GAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,cAA/B,8CAGA,eAACuH,GAAA,EAAD,CACEvH,MAAM,UACND,QAAQ,WACRwL,UAAW,eAAC,KAAD,IACXxH,QAAS,kBAAM2P,GAAQ,IAJzB,2BAQA,eAAC,GAAD,CACEpP,KAAMA,EACNwN,YAAa,kBAAM4B,GAAQ,IAC3BzY,KAAMwB,EACNwR,WAAYjR,OAGhB,eAAC,GAAD,CACE4U,OAAQ6B,EACR5L,UAAU,uDACVC,eAAgBA,EAChBC,gBAAiB,CAAEoD,GAAI,GAAIK,GAAI,EAAGC,GAAI,SC/CxCkI,GAAoBpU,KAAOC,IAAV,wYAOVgB,IAoBEoT,GAVsC,SAAC,GAAD,IAAGtI,EAAH,EAAGA,KAAH,OACnD,eAACqI,GAAD,UACE,eAAC,KAAD,CAAM/T,GAAI0L,EAAV,SACE,gBAACxL,GAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,cAA/B,mBACS,IADT,uBC4ES6T,GAvFmC,SAAC,GAA2B,IAAhB/W,EAAe,EAAxBgX,MAAShX,OAC5D,EAMIgG,KALIrG,EADR,EACExB,KACcwY,EAFhB,EAEElV,aACSwV,EAHX,EAGE5Y,QACW6Y,EAJb,EAIEtS,UACAxG,EALF,EAKEA,MAGIyP,EAAyB,MAATzP,EAChB+Y,EAA0B,MAAZxX,EACdyX,EAA2BvS,wBAC/B,kBAAMqS,EAAclX,EAAOD,GAAI,CAAEkM,gBAAgB,MACjD,IAGiB/L,EACjBmG,GAAqB,CAAEd,UAAW6R,IAD5BxS,UAGFoG,EAAiBnG,wBACrB,SAAC8P,GAAD,MAAsC,CACpC,yBAA0B,CACxB7M,KAAMuP,KACNrP,QAAS,WAAO,IAAD,IACb,GAAKmP,GAAgB3K,OAAO0B,QAAQ,uBAApC,CAEA,IAGMvB,EAAmC,CACvCpD,WAAY,CACVoM,UALgB,oBAClBhW,EAASuV,qBADS,aAClB,EAAwBJ,OAAO3W,KAAKqF,KAAI,SAAAX,GAAI,OAAIA,EAAK9C,aADnC,QAC0C,IAIjC0V,QAAO,SAAA5S,GAAI,OAAIA,IAAS8R,OAGrDzU,EAAeP,EAASI,GAAI4M,SAIlC,CAAChN,IAOH,OAJAwO,sBAAU,WACRiJ,MACC,IAGD,gBAACrT,GAAA,EAAD,CAAWC,SAAS,KAApB,UACE,eAAC,GAAD,CAAkBwK,KAAK,iBACrB2I,GAAeF,GACf,eAACjU,GAAA,EAAD,CACEC,QAAQ,KACRC,MAAM,gBACNkE,MAAO,CAAEoD,aAAc,SAHzB,4CAQDqD,GACC,gBAAC,GAAD,CAAajJ,UAAWwS,EAAxB,2DAEQ,OAALhZ,QAAK,IAALA,OAAA,EAAAA,EAAOmQ,SAAP,mBAAsBnQ,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOmQ,QAA7B,KAA0C,GAF7C,OAKD4I,GACC,gBAACvM,GAAA,EAAD,CAAMM,WAAS,EAACC,QAAS,EAAzB,UACE,eAACP,GAAA,EAAD,CAAM/H,MAAI,EAACwL,GAAI,GAAIM,GAAI,EAAvB,SACE,eAAC,GAAD,CAAaM,MAAOtP,EAAS4J,WAAWC,WAE1C,gBAACoB,GAAA,EAAD,CAAM/H,MAAI,EAACwL,GAAI,GAAIM,GAAI,EAAvB,UACE,eAAC,GAAD,CAAexQ,KAAMwB,EAAUwR,WAAYjR,IAC3C,eAAC,GAAD,CAAqB/B,KAAMwB,EAAUwR,WAAYjR,IACjD,eAAC,GAAD,CAAa/B,KAAMwB,EAAUwR,WAAYjR,OAE3C,eAAC0K,GAAA,EAAD,CAAM/H,MAAI,EAACwL,GAAI,GAAIjH,MAAO,CAAEkQ,OAAQ,YAApC,SACE,eAAC,GAAD,CACE3X,SAAUA,EACVgX,eAAgBA,EAChBzW,eAAgBA,EAChB8K,eAAgBA,aC3FjBM,GAAc7I,aAAO8I,KAAP9I,CAAH,0aAoBX+I,GAAa/I,KAAOgJ,KAAV,kHAQVC,GAAcjJ,aAAOO,KAAPP,CAAH,yFC2JT8U,GAlJY,WACzB,MAAgCtS,oBAAuB,CACrD2G,KAAM,GACNzI,MAAO,GACPE,YAAa,GACbwI,SAAU,GACV2L,OAAQ,KALV,oBAAO1L,EAAP,KAAiBC,EAAjB,KAQMC,EAAYnH,wBAAY,WAC5BkH,EAAY,CACVH,KAAM,GACNzI,MAAO,GACPE,YAAa,GACbwI,SAAU,GACV2L,OAAQ,OAET,IAEgB9Y,EAAgBoG,KAA3BF,UACR,EACEkB,GAAiB,CACfP,UAAW,WACTyG,IACAtN,EAAY,CACVkX,oBAAoB,EACpB1J,SAAU,QACVC,gBAAiB,WAPN7L,EAAnB,EAAQsE,UAAgC6S,EAAxC,EAA+BpZ,QAYzBgO,EAAexH,wBAAY,SAACqC,GAEhC,GADAA,EAAEoF,iBAzDe,SAACR,GACpB,OAAKA,EAASF,KAKVE,EAASF,KAAKW,OAAS,IACzBC,OAAOC,MAAM,gDACN,GAGLX,EAAS3I,MAAMoJ,OAAS,IAC1BC,OAAOC,MAAM,gDACN,KAGLX,EAASzI,YAAYkJ,OAAS,OAChCC,OAAOC,MAAM,sDACN,IAhBPD,OAAOC,MAAM,mCACN,GAuDFC,CAAaZ,GAAlB,CAEA,IAAMa,EAAwB,CAC5BpD,WAAY,CACVqC,KAAME,EAASF,KACfzI,MAAO2I,EAAS3I,OAAS2I,EAASF,KAClCvI,YAAayI,EAASzI,YACtBmG,OAAQsC,EAASD,SAAW,CAACC,EAASD,UAAY,GAClD2L,OAAQ1L,EAAS0L,OACb1L,EAAS0L,OACRE,MAAM,KACNlU,KAAI,SAAAX,GAAI,OAAIA,EAAK8U,UACjBlC,QAAO,SAAA5S,GAAI,OAAKO,KAAQP,MACzB,KAGRvC,EAAWqM,MACV,CAACb,IAEJ,OACE,eAAC,GAAD,UACE,gBAAC,GAAD,CACE/L,GAAG,YACH6M,YAAU,EACVC,aAAa,MACbC,SAAUT,EAJZ,UAME,eAAC,GAAD,CAAapJ,QAAQ,KAAK8J,MAAM,SAAhC,SACG0K,EAAiB,wBAA0B,kBAE9C,eAACzK,GAAA,EAAD,CACEC,WAAS,EACTrB,KAAK,OACLsB,MAAM,aACNjK,QAAQ,WACR0D,MAAOmF,EAASF,KAChBuB,SAAU,SAACjG,GACT6E,EAAY,6BAAKD,GAAN,IAAgBF,KAAM1E,EAAEkG,OAAOzG,UAE5C0G,SAAUoK,IAEZ,eAACzK,GAAA,EAAD,CACEC,WAAS,EACTrB,KAAK,QACLsB,MAAM,oBACNjK,QAAQ,WACR0D,MAAOmF,EAAS3I,MAChBgK,SAAU,SAACjG,GACT6E,EAAY,6BAAKD,GAAN,IAAgB3I,MAAO+D,EAAEkG,OAAOzG,UAE7C0G,SAAUoK,IAEZ,eAACzK,GAAA,EAAD,CACEC,WAAS,EACTrB,KAAK,cACLsB,MAAM,cACNjK,QAAQ,WACR0D,MAAOmF,EAASzI,YAChB8J,SAAU,SAACjG,GACT6E,EAAY,6BAAKD,GAAN,IAAgBzI,YAAa6D,EAAEkG,OAAOzG,UAEnD0G,SAAUoK,IAEZ,eAACzK,GAAA,EAAD,CACEC,WAAS,EACTrB,KAAK,WACLsB,MAAM,iBACNjK,QAAQ,WACR0D,MAAOmF,EAASD,SAChBsB,SAAU,SAACjG,GACT6E,EAAY,6BAAKD,GAAN,IAAgBD,SAAU3E,EAAEkG,OAAOzG,UAEhD0G,SAAUoK,IAEZ,eAACzK,GAAA,EAAD,CACEC,WAAS,EACTrB,KAAK,SACLsB,MAAM,gBACNjK,QAAQ,WACR0D,MAAOmF,EAAS0L,OAChBrK,SAAU,SAACjG,GACT6E,EAAY,6BAAKD,GAAN,IAAgB0L,OAAQtQ,EAAEkG,OAAOzG,UAE9CS,MAAO,CAAEoD,aAAc,IACvB6C,SAAUoK,IAEZ,eAAChN,GAAA,EAAD,CACEwC,WAAS,EACTzN,KAAK,SACLyD,QAAQ,YACRC,MAAM,UACNwH,KAAK,QACLtD,MAAO,CAAEoD,aAAc,IACvB6C,SAAUoK,EAPZ,SASGA,EAAiB,gBAAkB,WAEtC,eAAChN,GAAA,EAAD,CACEwC,WAAS,EACThK,QAAQ,YACRC,MAAM,YACNwH,KAAK,QACLzD,QAAS+E,EACTqB,SAAUoK,EANZ,yBCxKKhK,GAAwBhL,KAAOC,IAAV,qFAEnB,qBAAGrE,QAAwB,OAAS,WAItCqP,GAAmBjL,aAAOgI,KAAPhI,CAAH,+JCsFdmV,GAlFmB,WAChC,MAKI9S,KAJSpG,EADb,EACEkG,UACSyQ,EAFX,EAEEhX,QACMyW,EAHR,EAGE3W,KACAC,EAJF,EAIEA,MAGIyP,EAAyB,MAATzP,EAChByZ,EAAyBhT,wBAAY,WACzCnG,EAAY,CACVkX,oBAAoB,EACpB1J,SAAU,QACVC,gBAAiB,UAElB,IAEgBzL,EAAe8F,GAAiB,CACjDjB,UAAWsS,IADLjT,UAIFoG,EAAiBnG,wBACrB,SAAC8P,GAAD,MAAsC,CACpC3G,OAAQ,CACNlG,KAAMmG,KACNjG,QAAS,WACHwE,OAAO0B,QAAQ,sBAAsBxN,EAAWiU,QAI1D,IAOF,OAJAxG,sBAAU,WACR0J,MACC,IAGD,eAAC9T,GAAA,EAAD,CAAWC,SAAS,KAAKoD,MAAO,CAAEoD,aAAc,QAAhD,SACE,eAACvG,GAAA,EAAD,CAAMC,IAAE,EAAR,SACE,eAACH,GAAA,EAAD,UACE,gBAAC6G,GAAA,EAAD,CACEM,WAAS,EACTkD,eAAe,gBACfhD,WAAW,UACXD,QAAS,EAJX,UAME,gBAACP,GAAA,EAAD,CAAM/H,MAAI,EAACwL,GAAI,GAAIC,GAAI,EAAvB,UACGT,GACC,gBAAC,GAAD,CAAajJ,UAAWiT,EAAxB,yDAEQ,OAALzZ,QAAK,IAALA,OAAA,EAAAA,EAAOmQ,SAAP,mBAAsBnQ,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOmQ,QAA7B,KAA0C,GAF7C,OAKF,eAAC,GAAD,CACEC,KAAK,aACLvL,QAAQ,OACRC,MAAM,UACNuL,UAAW,eAAC,KAAD,IACXpB,SAAUgI,EALZ,2BASA,eAAC,GAAD,CACEP,OAAQA,EACR/J,UAAWsK,EAAgB,mCAAmChK,EAC9DL,eAAgBA,EAChBC,gBAAiB,CAAEoD,GAAI,GAAIK,GAAI,EAAGC,GAAI,EAAGL,GAAI,QAGjD,eAAC1D,GAAA,EAAD,CAAM/H,MAAI,EAACwL,GAAI,GAAIC,GAAI,EAAvB,SACE,eAAC,GAAD,CAAuBjQ,QAASgX,EAAhC,SACE,eAAC,GAAD,kB,+BClFHpC,GAAkBxQ,aAAOuK,KAAPvK,CAAH,6CAIfmO,GAAmBnO,aAAOuE,KAAPvE,CAAH,uFAOhBsQ,GAAkBtQ,KAAOC,IAAV,sOAiBfoQ,GAAkBrQ,KAAOC,IAAV,+CCoHboV,GApHuC,SAAC,GAIhD,IAHLN,EAGI,EAHJA,OACArZ,EAEI,EAFJA,KACAgT,EACI,EADJA,WAEMgC,EAAgBqE,EAAOO,KAAK,MAClC,EAAwC9S,oBAAiBkO,GAAzD,oBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAgCpO,qBAAkB,GAAlD,oBAAOqO,EAAP,KAAiBC,EAAjB,KACA,EAAwCtO,qBAAkB,GAA1D,oBAAO+S,EAAP,KAAqBC,EAArB,KAYMzE,EAAe3O,wBAAY,WAG/B,GAFA0O,GAAY,GAERH,IAAiBD,EACrB,IAAI/P,KAAQgQ,IAAkB5G,OAAO0B,QAAQ,+BAA7C,CAKA,IAAMvB,EAA+B,CACnCpD,WAAY,CACViO,OAASpU,KAAQgQ,GAKb,GAJAA,EACCsE,MAAM,KACNlU,KAAI,SAAAX,GAAI,OAAIA,EAAK8U,UACjBlC,QAAO,SAAA5S,GAAI,OAAKO,KAAQP,QAIjCsO,EAAWhT,EAAK4B,GAAI4M,QAdlB0G,EAAgBF,KAejB,CAAChV,EAAK4B,GAAIqT,EAAcD,IAE3B,OACE,uBAAK/L,MAAO,CAAEoD,aAAc,UAA5B,UACE,eAACxH,GAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBkE,MAAO,CAAEoD,aAAc,GAAzE,4BAGC8I,EACC,gBAAC,GAAD,WACE,eAAC,GAAD,CACE5I,KAAK,SACLzH,QAAQ,WACR0D,MAAOyM,EACPjG,SAnCR,SAACjG,GAAD,OAA4CmM,EAAgBnM,EAAEkG,OAAOzG,QAoC7D8M,SAAU,SAACC,GACLA,GAAOA,EAAMC,SAEnBtB,WAAY,CACVI,aACE,gBAACF,GAAA,EAAD,CAAgBC,SAAS,MAAzB,UACE,eAACxL,GAAA,EAAD,CACEI,MAAO,CAAEuL,QAAS,GAClB1L,QAAS,kBAAMgR,GAAgB,IAFjC,SAIE,eAAC,KAAD,MAEF,eAACC,GAAA,EAAD,CACE1Q,KAAMwQ,EACNzJ,QAAQ,wCACR4J,OACE,eAAC,GAAD,CAAkBlR,QAAS,kBAAMgR,GAAgB,IAAjD,SACE,eAAC,KAAD,CAAW7Q,MAAO,CAAElE,MAAO,oBAQzC,uBAAKkE,MAAO,CAAE2M,UAAW,GAAzB,UACE,eAAC,GAAD,CAAkB9M,QAASuM,EAA3B,SACE,eAAC,KAAD,MAEF,eAAC,GAAD,CAAkBvM,QAvEP,WACnBsM,GAAY,GACZF,EAAgBF,IAqER,SACE,eAAC,KAAD,YAKN,gBAAC,GAAD,WACI/P,KAAQoU,GASR,eAACxU,GAAA,EAAD,CACEC,QAAQ,QACRC,MAAM,gBACNkE,MAAO,CAAEuL,QAAS,kBAHpB,mDARA,qBAAIvL,MAAO,CAAEkQ,OAAQ,GAArB,SACGE,EAAOhU,KAAI,SAACX,EAAMY,GAAP,OACV,8BACE,eAACT,GAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAlC,SAAmDL,KADrD,gBAAkBY,SAcxB,eAAC,GAAD,CAAkBwD,QAjGJ,kBAAMsM,GAAY,IAiGUnM,MAAO,CAAEsL,WAAY,GAA/D,SACE,eAAC,KAAD,aCpDG0F,GAzE+B,SAAC,GAA2B,IAAD,EAAfpY,EAAe,EAAxBgX,MAAShX,OACxD,EAMIoG,KALI7F,EADR,EACEpC,KACc2M,EAFhB,EAEErJ,aACS4W,EAHX,EAGEha,QACWia,EAJb,EAIE1T,UACAxG,EALF,EAKEA,MAGIyP,EAAyB,MAATzP,EAChB+Y,EAAsB,MAAR5W,EACdiX,EAAM,iBAAGjX,QAAH,IAAGA,OAAH,EAAGA,EAAMgJ,WAAWiO,cAApB,QAA8B,GACpCe,EAAuB1T,wBAC3B,kBAAMyT,EAAUtY,EAAOD,GAAI,CAAE6V,oBAAoB,MACjD,IAGiBnV,EACjB6F,GAAiB,CAAEf,UAAWgT,IADxB3T,UAOR,OAJAuJ,sBAAU,WACRoK,MACC,IAGD,gBAACxU,GAAA,EAAD,CAAWC,SAAS,KAApB,UACE,eAAC,GAAD,CAAkBwK,KAAK,aACrB2I,GAAekB,GACf,eAACrV,GAAA,EAAD,CACEC,QAAQ,KACRC,MAAM,gBACNkE,MAAO,CAAEoD,aAAc,SAHzB,wCAQDqD,GACC,gBAAC,GAAD,CAAajJ,UAAW2T,EAAxB,uDAEQ,OAALna,QAAK,IAALA,OAAA,EAAAA,EAAOmQ,SAAP,mBAAsBnQ,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOmQ,QAA7B,KAA0C,GAF7C,OAKD4I,GACC,gBAACvM,GAAA,EAAD,CAAMM,WAAS,EAACC,QAAS,EAAzB,UACE,eAACP,GAAA,EAAD,CAAM/H,MAAI,EAACwL,GAAI,GAAIM,GAAI,EAAvB,SACE,eAAC,GAAD,CAAaM,MAAO1O,EAAKgJ,WAAWC,WAEtC,gBAACoB,GAAA,EAAD,CAAM/H,MAAI,EAACwL,GAAI,GAAIM,GAAI,EAAvB,UACE,eAAC,GAAD,CAAexQ,KAAMoC,EAAM4Q,WAAY1Q,IACvC,eAAC,GAAD,CAAqBtC,KAAMoC,EAAM4Q,WAAY1Q,IAC7C,eAAC,GAAD,CAAgB+W,OAAQA,EAAQrZ,KAAMoC,EAAM4Q,WAAY1Q,IACxD,eAAC,GAAD,CAAatC,KAAMoC,EAAM4Q,WAAY1Q,OAEvC,gBAACmK,GAAA,EAAD,CAAM/H,MAAI,EAACwL,GAAI,GAAIjH,MAAO,CAAEkQ,OAAQ,YAApC,UACE,eAACtU,GAAA,EAAD,CACEC,QAAQ,KACRC,MAAM,cACNkE,MAAO,CAAEoD,aAAc,UAHzB,sDAOA,eAAC,GAAD,CACEM,WAAYA,EACZC,UAAU,sDACVE,gBAAiB,CAAEoD,GAAI,GAAIK,GAAI,EAAGC,GAAI,eCxDrC6J,GAhBc,WAC3B,IAAMC,EAAY9T,aAAY+B,IAE9B,OACE,gBAAC3C,GAAA,EAAD,CAAWC,SAAS,KAApB,UACE,+BAAMyU,EAAY,OAAS,SAC3B,eAAChO,GAAA,EAAD,CACEvH,MAAM,UACND,QAAQ,YAFV,sBCUSyV,GAXU,kBACvB,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOC,OAAK,EAACC,KAAK,IAAI5E,UAAWlQ,KACjC,eAAC,KAAD,CAAO6U,OAAK,EAACC,KAAK,cAAc5E,UAAWrG,KAC3C,eAAC,KAAD,CAAOgL,OAAK,EAACC,KAAK,kBAAkB5E,UAAW+C,KAC/C,eAAC,KAAD,CAAO4B,OAAK,EAACC,KAAK,UAAU5E,UAAW4D,KACvC,eAAC,KAAD,CAAOe,OAAK,EAACC,KAAK,cAAc5E,UAAWoE,KAC3C,eAAC,KAAD,CAAOO,OAAK,EAACC,KAAK,cAAc5E,UAAWwE,S,UCblCK,GAAYpW,aAAOqW,KAAPrW,CAAH,mRAgBTsW,GAAatW,KAAOsM,IAAV,6GAQViK,GAAgBvW,aAAOO,KAAPP,CAAH,2KAEbiB,IC/BE,OAA0B,iCCSnCuV,GAA+B,kBACnC,eAAClV,GAAA,EAAD,CAAWC,SAAS,KAApB,SACE,gBAAC6U,GAAD,CAAWrG,SAAS,SAAStP,MAAM,UAAnC,UACE,eAAC,KAAD,CAAMJ,GAAG,IAAT,SACE,eAACiW,GAAD,CAAY/O,IAAKuK,GAAWtK,IAAI,eAElC,eAAC+O,GAAD,CAAe/V,QAAQ,KAAK8J,MAAM,SAAlC,SARQ,2BAeCmM,QAAMC,KAAKF,I,UChBpBG,GAAiB3W,aAAO4W,KAAP5W,CAAH,6JAsBL6W,GAXe,WAC5B,IAAQjb,EAAYiH,KAAZjH,QAER,OACE,eAAC+a,GAAD,CACElW,MAAM,UACNkE,MAAO,CAAEmS,WAAYlb,EAAU,UAAY,aCJlCmb,GAZO,kBACpB,eAAC,KAAD,UACE,uBAAKrV,UAAU,MAAf,UACE,eAAC,GAAD,IACA,eAAC,GAAD,IACA,sBAAKA,UAAU,OAAf,SACE,eAAC,GAAD,YCJFhC,I,OAAQD,MAEduX,KAASC,OACP,eAAC,KAAD,CAAUvX,MAAOA,GAAjB,SACE,eAAC,GAAD,MAEFwX,SAASC,eAAe,W","file":"static/js/main.dd220136.chunk.js","sourcesContent":["// consumed only by reducers\nexport const SET_APP_LOADING = '@state/SET_APP_LOADING';\nexport const UPDATE_LOCAL_CATEGORIES = '@state/UPDATE_LOCAL_CATEGORIES';\nexport const UPDATE_LOCAL_DISHES = '@state/UPDATE_LOCAL_DISHES';\n\n// consumed only by epics\nexport const FETCH_COMPLETED = '@api/FETCH_COMPLETED'; // generic signal for when an api call is successfully completed\nexport const FETCH_FAILED = '@api/FETCH_FAILED'; // generic signal for when an api call failed\nexport const FETCH_DISHES_API = '@api/FETCH_DISHES_API';\nexport const FETCH_CATEGORIES_API = '@api/FETCH_CATEGORIES_API';\n","import { handleActions } from 'redux-actions';\n\nimport { SET_APP_LOADING } from 'appState/actions/constants';\n\nconst appLoadingReducer = handleActions<boolean>({\n  [SET_APP_LOADING]: (_, { payload }) => payload\n}, false);\n\nexport default appLoadingReducer;\n","import { handleActions } from 'redux-actions';\n\nconst pingingReducer = handleActions<boolean, undefined>({\n  PING: () => true,\n  PONG: () => false\n}, false);\n\nexport default pingingReducer;\n","import { handleActions } from 'redux-actions';\n\nimport { FetchCategoriesApiCall } from 'appState/types';\nimport { UpdateLocalCategoriesAction } from 'appState/actions/types';\nimport { UPDATE_LOCAL_CATEGORIES } from 'appState/actions/constants';\n\nconst initialState: FetchCategoriesApiCall = {\n  data: [],\n  error: null,\n  loading: false\n};\n\nconst fetchCategoriesReducer = handleActions<\n  FetchCategoriesApiCall,\n  UpdateLocalCategoriesAction['payload']\n>({\n  [UPDATE_LOCAL_CATEGORIES]: (state, { payload }) => ({ ...state, ...payload })\n}, initialState);\n\nexport default fetchCategoriesReducer;\n","import { handleActions } from 'redux-actions';\n\nimport { FetchDishesApiCall } from 'appState/types';\nimport { UpdateLocalDishesAction } from 'appState/actions/types';\nimport { UPDATE_LOCAL_DISHES } from 'appState/actions/constants';\n\nconst initialState: FetchDishesApiCall = {\n  data: [],\n  error: null,\n  loading: false\n};\n\nconst fetchDishesReducer = handleActions<\n  FetchDishesApiCall,\n  UpdateLocalDishesAction['payload']\n>({\n  [UPDATE_LOCAL_DISHES]: (state, { payload }) => ({ ...state, ...payload })\n}, initialState);\n\nexport default fetchDishesReducer;\n","import { combineReducers } from 'redux';\n\nimport { ApiCallsState } from 'appState/types';\n\nimport fetchCategoriesReducer from './fetchCategoriesReducer';\nimport fetchDishesReducer from './fetchDishesReducer';\n\nconst apiCallsReducer = combineReducers<ApiCallsState, AnyAction>({\n  fetchCategories: fetchCategoriesReducer,\n  fetchDishes: fetchDishesReducer\n});\n\nexport default apiCallsReducer;\n","import { combineReducers } from 'redux';\n\nimport appLoadingReducer from './appLoadingReducer';\nimport pingingReducer from './pingingReducer';\nimport apiCallsReducer from './apiCalls';\n\nconst rootReducer = combineReducers<GlobalState, AnyAction>({\n  appLoading: appLoadingReducer,\n  pinging: pingingReducer,\n  apiCalls: apiCallsReducer\n});\n\nexport default rootReducer;\n","import { ofType } from 'redux-observable';\nimport { timer } from 'rxjs';\nimport { mapTo, pluck, switchMap } from 'rxjs/operators';\n\nexport type PingAction = Action<'PING', number>;\nexport type PongAction = Action<'PONG'>;\n\n/*\n  - Action-to-Action mapping => simply use `map` operator\n  - Action-to-Observable mapping: If emitted Actions of a source Observable are mapped to\n  inner Observables, it is very likely that we will have to deal with inner Observable combination\n  and we should choose between `concatMap`, `mergeMap`, `switchMap`, and `exhaustMap`.\n  It is all about choosing a suitable Observable combination strategy.\n  - See this link: https://blog.angular-university.io/rxjs-higher-order-mapping/\n */\n\nconst pingPongEpic: Epic<PongAction> = action$ =>\n  action$.pipe(\n    ofType<AnyAction, PingAction>('PING'),\n    pluck('payload'),\n    switchMap(delayTime => timer(delayTime).pipe(\n      mapTo({ type: 'PONG' as const, payload: null })\n    ))\n  );\n\nexport default pingPongEpic;\n","// heroku production host (deprecated)\n// export const BASE_URL = 'https://whats-the-dish-api.herokuapp.com/api/v1';\n\n// local host for development\nexport const BASE_URL = 'http://localhost:5000/api/v1';\n","import axios from 'axios';\n\nimport { RawCategory, PartialRawCategory } from 'models';\n\nimport { BASE_URL } from './constants';\nimport {\n  ApiCallPromise,\n  FetchCategoriesApiOptions,\n  GetCategoryApiOptions,\n  CategoryCollectionApiResponse,\n  SingleCategoryApiResponse\n} from './types';\n\nexport const fetchCategories =\n  (params: FetchCategoriesApiOptions = {}): ApiCallPromise<CategoryCollectionApiResponse> =>\n    axios.get(`${BASE_URL}/categories`, { params });\n\nexport const createCategory =\n  (category: RawCategory): ApiCallPromise<SingleCategoryApiResponse> =>\n    axios.post(`${BASE_URL}/categories`, category);\n\nexport const getCategory =\n  (id: string, params: GetCategoryApiOptions = {}): ApiCallPromise<SingleCategoryApiResponse> =>\n    axios.get(`${BASE_URL}/categories/${id}`, { params });\n\nexport const updateCategory =\n  (id: string, category: PartialRawCategory): ApiCallPromise<SingleCategoryApiResponse> =>\n    axios.patch(`${BASE_URL}/categories/${id}`, category);\n\nexport const deleteCategory =\n  (id: string): ApiCallPromise => axios.delete(`${BASE_URL}/categories/${id}`);\n","import axios from 'axios';\n\nimport { RawDish, PartialRawDish } from 'models';\n\nimport { BASE_URL } from './constants';\nimport {\n  ApiCallPromise,\n  FetchDishesApiOptions,\n  GetDishApiOptions,\n  SingleDishApiResponse,\n  DishCollectionApiResponse\n} from './types';\n\nexport const fetchDishes =\n  (params: FetchDishesApiOptions = {}): ApiCallPromise<DishCollectionApiResponse> =>\n    axios.get(`${BASE_URL}/dishes`, { params });\n\nexport const createDish = (dish: RawDish): ApiCallPromise<SingleDishApiResponse> =>\n  axios.post(`${BASE_URL}/dishes`, dish);\n\nexport const getDish =\n  (id: string, params: GetDishApiOptions = {}): ApiCallPromise<SingleDishApiResponse> =>\n    axios.get(`${BASE_URL}/dishes/${id}`, { params });\n\nexport const updateDish =\n  (id: string, dish: PartialRawDish): ApiCallPromise<SingleDishApiResponse> =>\n    axios.patch(`${BASE_URL}/dishes/${id}`, dish);\n\nexport const deleteDish =\n  (id: string): ApiCallPromise => axios.delete(`${BASE_URL}/dishes/${id}`);\n\nexport const likeDish = (id: string): ApiCallPromise<SingleDishApiResponse> =>\n  axios.put(`${BASE_URL}/dishes/${id}/like`);\n\nexport const unlikeDish = (id: string): ApiCallPromise<SingleDishApiResponse> =>\n  axios.put(`${BASE_URL}/dishes/${id}/unlike`);\n","import { createAction } from 'redux-actions';\n\nimport {\n  SET_APP_LOADING,\n  FETCH_COMPLETED,\n  FETCH_FAILED,\n  FETCH_DISHES_API,\n  FETCH_CATEGORIES_API,\n  UPDATE_LOCAL_DISHES,\n  UPDATE_LOCAL_CATEGORIES\n} from './constants';\nimport {\n  SetAppLoadingAction,\n  FetchCompletedAction,\n  FetchFailedAction,\n  FetchDishesAction,\n  UpdateLocalDishesAction,\n  FetchCategoriesAction,\n  UpdateLocalCategoriesAction\n} from './types';\n\nexport const setAppLoadingAC = createAction(SET_APP_LOADING) as ActionCreator<SetAppLoadingAction>;\n\nexport const fetchCompletedAC = createAction(FETCH_COMPLETED) as ActionCreator<FetchCompletedAction>;\n\nexport const fetchFailedAC = createAction(FETCH_FAILED) as ActionCreator<FetchFailedAction>;\n\nexport const fetchDishesAC = createAction(FETCH_DISHES_API) as ActionCreator<FetchDishesAction>;\n\nexport const updateLocalDishesAC = createAction(UPDATE_LOCAL_DISHES) as ActionCreator<UpdateLocalDishesAction>;\n\nexport const fetchCategoriesAC = createAction(FETCH_CATEGORIES_API) as ActionCreator<FetchCategoriesAction>;\n\nexport const updateLocalCategoriesAC = createAction(UPDATE_LOCAL_CATEGORIES) as ActionCreator<UpdateLocalCategoriesAction>;\n","import { ofType } from 'redux-observable';\nimport { concat, from, of } from 'rxjs';\nimport { catchError, exhaustMap, mergeMap, pluck } from 'rxjs/operators';\n\nimport * as api from 'api';\nimport { setAppLoadingAC, updateLocalDishesAC } from 'appState/actions';\nimport { FETCH_DISHES_API } from 'appState/actions/constants';\nimport {\n  FetchDishesAction,\n  SetAppLoadingAction,\n  UpdateLocalDishesAction\n} from 'appState/actions/types';\n\nconst fetchDishesEpic: Epic<SetAppLoadingAction | UpdateLocalDishesAction> = action$ =>\n  action$.pipe(\n    ofType<AnyAction, FetchDishesAction>(FETCH_DISHES_API),\n    pluck('payload', 'params'),\n    exhaustMap(params => concat(\n      of(\n        setAppLoadingAC(true),\n        updateLocalDishesAC({ loading: true })\n      ),\n      from(api.fetchDishes(params)).pipe(\n        pluck('data'),\n        mergeMap(res => of(\n          updateLocalDishesAC({\n            loading: false,\n            data: res.data,\n            includedData: res.included,\n            error: null\n          }),\n          setAppLoadingAC(false)\n        )),\n        catchError(err => of(\n          updateLocalDishesAC({\n            loading: false,\n            error: err ?? {}\n          }),\n          setAppLoadingAC(false)\n        ))\n      )\n    ))\n  );\n\nexport default fetchDishesEpic;\n","import { ofType } from 'redux-observable';\nimport { concat, from, of } from 'rxjs';\nimport { catchError, exhaustMap, mergeMap, pluck } from 'rxjs/operators';\n\nimport * as api from 'api';\nimport { setAppLoadingAC, updateLocalCategoriesAC } from 'appState/actions';\nimport { FETCH_CATEGORIES_API } from 'appState/actions/constants';\nimport {\n  FetchCategoriesAction,\n  SetAppLoadingAction,\n  UpdateLocalCategoriesAction\n} from 'appState/actions/types';\n\nconst fetchCategoriesEpic: Epic<SetAppLoadingAction | UpdateLocalCategoriesAction> = action$ =>\n  action$.pipe(\n    ofType<AnyAction, FetchCategoriesAction>(FETCH_CATEGORIES_API),\n    pluck('payload', 'params'),\n    exhaustMap(params => concat(\n      of(\n        setAppLoadingAC(true),\n        updateLocalCategoriesAC({ loading: true })\n      ),\n      from(api.fetchCategories(params)).pipe(\n        pluck('data'),\n        mergeMap(res => of(\n          updateLocalCategoriesAC({\n            loading: false,\n            data: res.data,\n            includedData: res.included,\n            error: null\n          }),\n          setAppLoadingAC(false)\n        )),\n        catchError(err => of(\n          updateLocalCategoriesAC({\n            loading: false,\n            error: err ?? {}\n          }),\n          setAppLoadingAC(false)\n        ))\n      )\n    ))\n  );\n\nexport default fetchCategoriesEpic;\n","import { combineEpics } from 'redux-observable';\n\nimport pingPongEpic from './pingPongEpic';\nimport fetchDishesEpic from './fetchDishesEpic';\nimport fetchCategoriesEpic from './fetchCategoriesEpic';\n\nconst rootEpic = combineEpics(\n  pingPongEpic,\n  fetchDishesEpic,\n  fetchCategoriesEpic\n);\n\nexport default rootEpic;\n","import { Store, createStore, applyMiddleware } from 'redux';\nimport { createEpicMiddleware, EpicMiddleware } from 'redux-observable';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers';\nimport rootEpic from './epics';\n\nconst epicMiddleware: EpicMiddleware<AnyAction, AnyAction, GlobalState> = createEpicMiddleware();\n\nconst configureStore = (): Store<GlobalState, AnyAction> => {\n  const store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(epicMiddleware))\n  );\n  epicMiddleware.run(rootEpic);\n\n  return store;\n};\n\nexport default configureStore;\n","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  max-width: 800px;\n  margin: 0 auto;\n\n  @media (max-width: 600px) {\n    width: 100%;\n    flex-direction: column;\n  }\n`;\n\nexport const StyledListItem = styled.div`\n  a {\n    display: block;\n    width: 250px;\n    margin: 1rem;\n    padding: 1.5rem;\n    text-align: left;\n    text-decoration: none;\n    border: 1px solid #eaeaea;\n    border-radius: 10px;\n    transition: border-color 0.15s ease;\n\n    h2 {\n      margin: 0;\n      font-size: 1.25rem;\n      font-weight: 700;\n      transition: color 0.15s ease;\n      font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\n        Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n\n      @media (min-width: 768px) {\n        font-size: 1.5rem;\n      }\n    }\n\n    p {\n      margin-top: 0.5rem;\n      font-size: 1rem;\n      line-height: 1.5;\n      transition: color 0.15s ease;\n\n      @media (min-width: 768px) {\n        font-size: 1.25rem;\n      }\n    }\n\n    &:hover,\n    &:focus,\n    &:active {\n      border-color: #0070f3;\n\n      h2,\n      p {\n        color: #0070f3;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Typography } from '@material-ui/core';\nimport isEmpty from 'lodash/fp/isEmpty';\n\nimport { HomeItem } from 'models';\n\nimport { StyledGrid, StyledListItem } from './styles';\n\nconst HomeListItem: React.FC<{ item: HomeItem }> = ({ item }) => (\n  <StyledListItem>\n    <Link to={item.url}>\n      <Typography variant=\"h2\" color=\"textPrimary\">\n        {item.title}{' '}&rarr;\n      </Typography>\n      {!isEmpty(item.description) && (\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          {item.description}\n        </Typography>\n      )}\n    </Link>\n  </StyledListItem>\n);\n\nconst HomeList: React.FC<{ items: HomeItem[] }> = ({ items }) => (\n  <StyledGrid>\n    {items.map(\n      (item, index) => <HomeListItem key={`home-item-${index}`} item={item} />\n    )}\n  </StyledGrid>\n);\n\nexport default HomeList;\n","export const APP_ACCENT_COLOR = '#77bbf2';\nexport const DEFAULT_IMAGE_URL =\n  'https://dl.dropboxusercontent.com/s/m6acpdmoket5486/food-placeholder.png';\n","import styled from 'styled-components';\n\nimport { APP_ACCENT_COLOR } from 'common/constants';\n\nexport const StyledWrapper = styled.div`\n  padding: 2rem 0;\n  text-align: center;\n\n  @media (min-width: 768px) {\n    padding: 4rem 0;\n  }\n\n  @media (min-width: 1280px) {\n    padding: 5rem 0;\n  }\n\n  h3 {\n    font-size: 2rem;\n    margin-bottom: 1rem;\n\n    @media (min-width: 768px) {\n      font-size: 3rem;\n    }\n\n    span {\n      &:first-child {\n        display: block;\n\n        @media (min-width: 768px) {\n          display: inline;\n        }\n      }\n\n      &.app-name {\n        color: ${APP_ACCENT_COLOR};\n      }\n    }\n  }\n\n  h6 {\n    font-size: 1.25rem;\n    line-height: 1.4;\n    margin-bottom: 1.5rem;\n\n    @media (min-width: 768px) {\n      font-size: 1.5rem;\n    }\n  }\n`;\n","import React from 'react';\nimport { Container, Grow, Typography } from '@material-ui/core';\n\nimport { HomeItem } from 'models';\nimport HomeList from 'components/HomeList';\n\nimport { StyledWrapper } from './styles';\n\nconst HOME_ITEMS: HomeItem[] = [\n  {\n    url: '/categories',\n    title: 'See all categories',\n    description: 'Find out your favorite types of food'\n  },\n  {\n    url: '/dishes',\n    title: 'See all dishes',\n    description: 'Find out your favorite foods and drinks'\n  }\n];\n\nconst HomePage: React.FC = () => (\n  <Container maxWidth=\"lg\">\n    <Grow in>\n      <StyledWrapper>\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          <span>Welcome to </span>\n          <span className=\"app-name\">What&apos;s The Dish</span>\n          <span>!</span>\n        </Typography>\n        <Typography variant=\"h6\" color=\"textPrimary\">\n          What are your dishes today?<br />Get started by choosing what you might want to see:\n        </Typography>\n        <HomeList items={HOME_ITEMS} />\n      </StyledWrapper>\n    </Grow>\n  </Container>\n);\n\nexport default HomePage;\n","import { Category, Dish } from 'models';\n\nimport { FetchCategoriesApiCall } from 'appState/types';\n\nexport const apiCallSelector =\n  (state: Readonly<GlobalState>): FetchCategoriesApiCall => state.apiCalls.fetchCategories;\n\nexport const dataSelector =\n  (state: Readonly<GlobalState>): Category[] => state.apiCalls.fetchCategories.data;\n\nexport const includedDataSelector =\n  (state: Readonly<GlobalState>): Dish[] | undefined => state.apiCalls.fetchCategories.includedData;\n\nexport const errorSelector =\n  (state: Readonly<GlobalState>): any => state.apiCalls.fetchCategories.error;\n\nexport const loadingSelector =\n  (state: Readonly<GlobalState>): boolean => state.apiCalls.fetchCategories.loading;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchCategoriesAC } from 'appState/actions';\nimport { FetchCategoriesAction } from 'appState/actions/types';\nimport {\n  dataSelector,\n  includedDataSelector,\n  errorSelector,\n  loadingSelector\n} from 'appState/selectors/apiCalls/fetchCategories';\n\ntype ApiParams = FetchCategoriesAction['payload']['params'];\n\nconst useFetchCategoriesApi = () => {\n  const dispatch = useDispatch();\n  const data = useSelector(dataSelector);\n  const includedData = useSelector(includedDataSelector);\n  const error = useSelector(errorSelector);\n  const loading = useSelector(loadingSelector);\n\n  const fetchData = useCallback((params?: ApiParams) => {\n    dispatch(fetchCategoriesAC({ params }));\n  }, []);\n\n  return {\n    data,\n    includedData,\n    error,\n    loading,\n    fetchData\n  };\n};\n\nexport default useFetchCategoriesApi;\n","import { Category, Dish } from 'models';\n\nimport { FetchDishesApiCall } from 'appState/types';\n\nexport const apiCallSelector =\n  (state: Readonly<GlobalState>): FetchDishesApiCall => state.apiCalls.fetchDishes;\n\nexport const dataSelector =\n  (state: Readonly<GlobalState>): Dish[] => state.apiCalls.fetchDishes.data;\n\nexport const includedDataSelector =\n  (state: Readonly<GlobalState>): Category[] | undefined => state.apiCalls.fetchDishes.includedData;\n\nexport const errorSelector =\n  (state: Readonly<GlobalState>): any => state.apiCalls.fetchDishes.error;\n\nexport const loadingSelector =\n  (state: Readonly<GlobalState>): boolean => state.apiCalls.fetchDishes.loading;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchDishesAC } from 'appState/actions';\nimport { FetchDishesAction } from 'appState/actions/types';\nimport {\n  dataSelector,\n  errorSelector,\n  includedDataSelector,\n  loadingSelector\n} from 'appState/selectors/apiCalls/fetchDishes';\n\ntype ApiParams = FetchDishesAction['payload']['params'];\n\nconst useFetchDishesApi = () => {\n  const dispatch = useDispatch();\n  const data = useSelector(dataSelector);\n  const includedData = useSelector(includedDataSelector);\n  const error = useSelector(errorSelector);\n  const loading = useSelector(loadingSelector);\n\n  const fetchData = useCallback((params?: ApiParams) => {\n    dispatch(fetchDishesAC({ params }));\n  }, []);\n\n  return {\n    data,\n    includedData,\n    error,\n    loading,\n    fetchData\n  };\n};\n\nexport default useFetchDishesApi;\n","import { useCallback, useState } from 'react';\nimport noop from 'lodash/fp/noop';\n\nimport * as api from 'api';\nimport { Category, RawCategory } from 'models';\n\nimport { ApiHookOptions, useAppLoading } from '.';\n\ninterface CreateCategoryHookOptions extends ApiHookOptions {\n  onSuccess?: (data: Category) => void;\n}\n\ninterface CreateCategoryHookResult {\n  data: Nullable<Category>;\n  error: any;\n  loading: boolean;\n  fetchData: (category: RawCategory) => Promise<void>;\n}\n\nconst useCreateCategoryApi =\n  (options?: CreateCategoryHookOptions): CreateCategoryHookResult => {\n    const [data, setData] = useState<Nullable<Category>>(null);\n    const [error, setError] = useState<any>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n    const { setLoading: setAppLoading } = useAppLoading();\n\n    const onSuccess = options?.onSuccess ?? noop;\n    const onFailure = options?.onFailure ?? noop;\n    const onCompletion = options?.onCompletion ?? noop;\n\n    const fetchData = useCallback(async (category: RawCategory) => {\n      setLoading(true);\n      setAppLoading(true);\n\n      try {\n        const {\n          data: { data: createdCategory }\n        } = await api.createCategory(category);\n\n        setData(createdCategory);\n        setError(null);\n        onSuccess(createdCategory);\n      } catch (exception: unknown) {\n        const safeError = exception ?? {};\n\n        setError(safeError);\n        onFailure(safeError);\n      } finally {\n        setLoading(false);\n        setAppLoading(false);\n        onCompletion();\n      }\n    }, []);\n\n    return {\n      data,\n      error,\n      loading,\n      fetchData\n    };\n  };\n\nexport default useCreateCategoryApi;\n","import { useCallback, useState } from 'react';\nimport noop from 'lodash/fp/noop';\n\nimport * as api from 'api';\nimport { Dish, RawDish } from 'models';\n\nimport { ApiHookOptions, useAppLoading } from '.';\n\ninterface CreateDishHookOptions extends ApiHookOptions {\n  onSuccess?: (data: Dish) => void;\n}\n\ninterface CreateDishHookResult {\n  data: Nullable<Dish>;\n  error: any;\n  loading: boolean;\n  fetchData: (dish: RawDish) => Promise<void>;\n}\n\nconst useCreateDishApi =\n  (options?: CreateDishHookOptions): CreateDishHookResult => {\n    const [data, setData] = useState<Nullable<Dish>>(null);\n    const [error, setError] = useState<any>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n    const { setLoading: setAppLoading } = useAppLoading();\n\n    const onSuccess = options?.onSuccess ?? noop;\n    const onFailure = options?.onFailure ?? noop;\n    const onCompletion = options?.onCompletion ?? noop;\n\n    const fetchData = useCallback(async (dish: RawDish) => {\n      setLoading(true);\n      setAppLoading(true);\n\n      try {\n        const {\n          data: { data: createdDish }\n        } = await api.createDish(dish);\n\n        setData(createdDish);\n        setError(null);\n        onSuccess(createdDish);\n      } catch (exception: unknown) {\n        const safeError = exception ?? {};\n\n        setError(safeError);\n        onFailure(safeError);\n      } finally {\n        setLoading(false);\n        setAppLoading(false);\n        onCompletion();\n      }\n    }, []);\n\n    return {\n      data,\n      loading,\n      error,\n      fetchData\n    };\n  };\n\nexport default useCreateDishApi;\n","import { useCallback, useState } from 'react';\nimport noop from 'lodash/fp/noop';\n\nimport { Category, Dish } from 'models';\nimport * as api from 'api';\nimport {\n  GetCategoryApiOptions,\n  SingleCategoryApiResponse\n} from 'api/types';\n\nimport { ApiHookOptions, useAppLoading } from '.';\n\ninterface GetCategoryHookOptions extends ApiHookOptions {\n  onSuccess?: (data: SingleCategoryApiResponse) => void;\n}\n\ninterface GetCategoryHookResult {\n  data: Nullable<Category>;\n  includedData: Dish[];\n  error: any;\n  loading: boolean;\n  fetchData: (id: string, params?: GetCategoryApiOptions) => Promise<void>;\n}\n\nconst useGetCategoryApi =\n  (options?: GetCategoryHookOptions): GetCategoryHookResult => {\n    const [response, setResponse] = useState<SingleCategoryApiResponse | null>(null);\n    const [error, setError] = useState<any>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n    const { setLoading: setAppLoading } = useAppLoading();\n\n    const onSuccess = options?.onSuccess ?? noop;\n    const onFailure = options?.onFailure ?? noop;\n    const onCompletion = options?.onCompletion ?? noop;\n\n    const data = response?.data ?? null;\n    const includedData = response?.included ?? [];\n\n    const fetchData = useCallback(\n      async (id: string, params?: GetCategoryApiOptions) => {\n        setLoading(true);\n        setAppLoading(true);\n\n        try {\n          const { data: apiResponse } = await api.getCategory(id, params);\n\n          setResponse(apiResponse);\n          setError(null);\n          onSuccess(apiResponse);\n        } catch (exception: unknown) {\n          const safeError = exception ?? {};\n\n          setError(safeError);\n          onFailure(safeError);\n        } finally {\n          setLoading(false);\n          setAppLoading(false);\n          onCompletion();\n        }\n      },\n      []\n    );\n\n    return {\n      data,\n      includedData,\n      error,\n      loading,\n      fetchData\n    };\n  };\n\nexport default useGetCategoryApi;\n","import { useCallback, useState } from 'react';\nimport noop from 'lodash/fp/noop';\n\nimport * as api from 'api';\nimport { Category, Dish } from 'models';\nimport {\n  GetDishApiOptions,\n  SingleDishApiResponse\n} from 'api/types';\n\nimport { ApiHookOptions, useAppLoading } from '.';\n\ninterface GetDishHookOptions extends ApiHookOptions {\n  onSuccess?: (data: SingleDishApiResponse) => void;\n}\n\ninterface GetDishHookResult {\n  data: Nullable<Dish>;\n  includedData: Category[];\n  error: any;\n  loading: boolean;\n  fetchData: (id: string, params?: GetDishApiOptions) => Promise<void>;\n}\n\nconst useGetDishApi =\n  (options?: GetDishHookOptions): GetDishHookResult => {\n    const [response, setResponse] = useState<SingleDishApiResponse | null>(null);\n    const [error, setError] = useState<any>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n    const { setLoading: setAppLoading } = useAppLoading();\n\n    const onSuccess = options?.onSuccess ?? noop;\n    const onFailure = options?.onFailure ?? noop;\n    const onCompletion = options?.onCompletion ?? noop;\n\n    const data = response?.data ?? null;\n    const includedData = response?.included ?? [];\n\n    const fetchData = useCallback(\n      async (id: string, params?: GetDishApiOptions) => {\n        setLoading(true);\n        setAppLoading(true);\n\n        try {\n          const { data: apiResponse } = await api.getDish(id, params);\n\n          setResponse(apiResponse);\n          setError(null);\n          onSuccess(apiResponse);\n        } catch (exception: unknown) {\n          const safeError = exception ?? {};\n\n          setError(safeError);\n          onFailure(safeError);\n        } finally {\n          setLoading(false);\n          setAppLoading(false);\n          onCompletion();\n        }\n      },\n      []\n    );\n\n    return {\n      data,\n      includedData,\n      error,\n      loading,\n      fetchData\n    };\n  };\n\nexport default useGetDishApi;\n","import { useCallback, useState } from 'react';\nimport noop from 'lodash/fp/noop';\n\nimport * as api from 'api';\nimport { Category, PartialRawCategory} from 'models';\n\nimport { ApiHookOptions, useAppLoading } from '.';\n\ninterface UpdateCategoryHookOptions extends ApiHookOptions {\n  onSuccess?: (data: Category) => void;\n}\n\ninterface UpdateCategoryHookResult {\n  data: Nullable<Category>;\n  error: any;\n  loading: boolean;\n  fetchData: (id: string, category: PartialRawCategory) => Promise<void>;\n}\n\nconst useUpdateCategoryApi =\n  (options?: UpdateCategoryHookOptions): UpdateCategoryHookResult => {\n    const [data, setData] = useState<Nullable<Category>>(null);\n    const [error, setError] = useState<any>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n    const { setLoading: setAppLoading } = useAppLoading();\n\n    const onSuccess = options?.onSuccess ?? noop;\n    const onFailure = options?.onFailure ?? noop;\n    const onCompletion = options?.onCompletion ?? noop;\n\n    const fetchData = useCallback(async (id: string, category: PartialRawCategory) => {\n      setLoading(true);\n      setAppLoading(true);\n\n      try {\n        const { data: { data: apiResponse } } = await api.updateCategory(id, category);\n\n        setData(apiResponse);\n        setError(null);\n        onSuccess(apiResponse);\n      } catch (exception: unknown) {\n        const safeError = exception ?? {};\n\n        setError(safeError);\n        onFailure(safeError);\n      } finally {\n        setLoading(false);\n        setAppLoading(false);\n        onCompletion();\n      }\n    }, []);\n\n    return {\n      data,\n      error,\n      loading,\n      fetchData\n    };\n  };\n\nexport default useUpdateCategoryApi;\n","import { useCallback, useState } from 'react';\nimport noop from 'lodash/fp/noop';\n\nimport * as api from 'api';\nimport { Dish, PartialRawDish } from 'models';\n\nimport { ApiHookOptions, useAppLoading } from '.';\n\ninterface UpdateDishHookOptions extends ApiHookOptions {\n  onSuccess?: (data: Dish) => void;\n}\n\ninterface UpdateDishHookResult {\n  data: Nullable<Dish>;\n  error: any;\n  loading: boolean;\n  fetchData: (id: string, dish: PartialRawDish) => Promise<void>;\n}\n\nconst useUpdateDishApi =\n  (options?: UpdateDishHookOptions): UpdateDishHookResult => {\n    const [data, setData] = useState<Nullable<Dish>>(null);\n    const [error, setError] = useState<any>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n    const { setLoading: setAppLoading } = useAppLoading();\n\n    const onSuccess = options?.onSuccess ?? noop;\n    const onFailure = options?.onFailure ?? noop;\n    const onCompletion = options?.onCompletion ?? noop;\n\n    const fetchData = useCallback(async (id: string, dish: PartialRawDish) => {\n      setLoading(true);\n      setAppLoading(true);\n\n      try {\n        const { data: { data: apiResponse } } = await api.updateDish(id, dish);\n\n        setData(apiResponse);\n        setError(null);\n        onSuccess(apiResponse);\n      } catch (exception: unknown) {\n        const safeError = exception ?? {};\n\n        setError(safeError);\n        onFailure(safeError);\n      } finally {\n        setLoading(false);\n        setAppLoading(false);\n        onCompletion();\n      }\n    }, []);\n\n    return {\n      data,\n      error,\n      loading,\n      fetchData\n    };\n  };\n\nexport default useUpdateDishApi;\n","import { useCallback, useState } from 'react';\nimport noop from 'lodash/fp/noop';\n\nimport * as api from 'api';\n\nimport { ApiHookOptions, useAppLoading } from '.';\n\ninterface DeleteCategoryHookOptions extends ApiHookOptions {\n  onSuccess?: () => void;\n}\n\ninterface DeleteCategoryHookResult {\n  error: any;\n  loading: boolean;\n  fetchData: (id: string) => Promise<void>;\n}\n\nconst useDeleteCategoryApi =\n  (options?: DeleteCategoryHookOptions): DeleteCategoryHookResult => {\n    const [error, setError] = useState<any>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n    const { setLoading: setAppLoading } = useAppLoading();\n\n    const onSuccess = options?.onSuccess ?? noop;\n    const onFailure = options?.onFailure ?? noop;\n    const onCompletion = options?.onCompletion ?? noop;\n\n    const fetchData = useCallback(async (id: string) => {\n      setLoading(true);\n      setAppLoading(true);\n\n      try {\n        await api.deleteCategory(id);\n\n        setError(null);\n        onSuccess();\n      } catch (exception: unknown) {\n        const safeError = exception ?? {};\n\n        setError(safeError);\n        onFailure(safeError);\n      } finally {\n        setLoading(false);\n        setAppLoading(false);\n        onCompletion();\n      }\n    }, []);\n\n    return {\n      error,\n      loading,\n      fetchData\n    };\n  };\n\nexport default useDeleteCategoryApi;\n","import { useCallback, useState } from 'react';\nimport noop from 'lodash/fp/noop';\n\nimport * as api from 'api';\n\nimport { ApiHookOptions, useAppLoading } from '.';\n\ninterface DeleteDishHookOptions extends ApiHookOptions {\n  onSuccess?: () => void;\n}\n\ninterface DeleteDishHookResult {\n  error: any;\n  loading: boolean;\n  fetchData: (id: string) => Promise<void>;\n}\n\nconst useDeleteDishApi =\n  (options?: DeleteDishHookOptions): DeleteDishHookResult => {\n    const [error, setError] = useState<any>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n    const { setLoading: setAppLoading } = useAppLoading();\n\n    const onSuccess = options?.onSuccess ?? noop;\n    const onFailure = options?.onFailure ?? noop;\n    const onCompletion = options?.onCompletion ?? noop;\n\n    const fetchData = useCallback(async (id: string) => {\n      setLoading(true);\n      setAppLoading(true);\n\n      try {\n        await api.deleteDish(id);\n\n        setError(null);\n        onSuccess();\n      } catch (exception: unknown) {\n        const safeError = exception ?? {};\n\n        setError(safeError);\n        onFailure(safeError);\n      } finally {\n        setLoading(false);\n        setAppLoading(false);\n        onCompletion();\n      }\n    }, []);\n\n    return {\n      error,\n      loading,\n      fetchData\n    };\n  };\n\nexport default useDeleteDishApi;\n","export const appLoadingSelector =\n  (state: Readonly<GlobalState>): boolean => state.appLoading;\n\nexport const pingingSelector =\n  (state: Readonly<GlobalState>): boolean => state.pinging;\n","import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { appLoadingSelector } from 'appState/selectors';\nimport { setAppLoadingAC } from 'appState/actions';\n\ninterface AppLoadingHookResult {\n  loading: boolean;\n  setLoading: (value: boolean) => void;\n}\n\nconst useAppLoading = (): AppLoadingHookResult => {\n  const dispatch = useDispatch();\n  const loading = useSelector(appLoadingSelector);\n\n  const setLoading = useCallback((value: boolean) => {\n    dispatch(setAppLoadingAC(value));\n  }, []);\n\n  return { loading, setLoading };\n};\n\nexport default useAppLoading;\n","import React, { useState } from 'react';\nimport { IconButton, ListItemIcon, ListItemText, Menu, MenuItem } from '@material-ui/core';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { SvgIconComponent } from '@material-ui/icons';\n\nexport interface ActionMenuItems {\n  [actionName: string]: {\n    icon?: SvgIconComponent;\n    handler?: () => void;\n  };\n}\n\ninterface ActionMenuProps {\n  items: ActionMenuItems;\n  color?: string;\n}\n\nconst ActionMenu: React.FC<ActionMenuProps> = ({\n  items,\n  color = 'rgba(0,0,0,1)'\n}) => {\n  const [anchorElement, setAnchorElement] =\n    useState<HTMLButtonElement | null>(null);\n\n  const handleClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setAnchorElement(e.currentTarget);\n  };\n\n  const handleClose = () => setAnchorElement(null);\n\n  return (\n    <>\n      <IconButton\n        aria-label=\"menu\"\n        aria-controls=\"simple-more-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        style={{ color }}\n      >\n        <MoreHorizIcon />\n      </IconButton>\n      <Menu\n        keepMounted\n        id=\"simple-more-menu\"\n        anchorEl={anchorElement}\n        open={!!anchorElement}\n        onClose={handleClose}\n      >\n        {Object.keys(items).map((actionName: string, index: number) => {\n          const {\n            icon: ActionIcon,\n            handler: actionHandler\n          } = items[actionName];\n\n          return (\n            <MenuItem\n              key={`${index}_${actionName}`}\n              onClick={() => {\n                handleClose();\n                if (actionHandler) actionHandler();\n              }}\n            >\n              {ActionIcon && (\n                <ListItemIcon style={{ minWidth: 34 }}>\n                  <ActionIcon />\n                </ListItemIcon>\n              )}\n              <ListItemText>{actionName}</ListItemText>\n            </MenuItem>\n          );\n        })}\n      </Menu>\n    </>\n  );\n};\n\nexport default ActionMenu;\n","import styled from 'styled-components';\nimport { Card, CardActions, Typography } from '@material-ui/core';\n\nexport const ImageWrapper = styled.div`\n  position:relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0) 40%);\n    z-index: 1;\n  }\n\n  img {\n    display: block;\n    object-fit: cover;\n    width: 360px;\n    height: 240px;\n    z-index: 0;\n  }\n`;\n\nexport const TimeOverlay = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  color: white;\n  z-index: 2;\n`;\n\nexport const MoreButtonOverlay = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: white;\n  z-index: 2;\n`;\n\nexport const StyledCard = styled(Card)`\n  && {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    border-radius: 15px;\n    height: 100%;\n    justify-content: space-between;\n    box-shadow:\n      0px 2px 12px -1px rgba(0, 0, 0, 0.2),\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n      0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const StyledCardActions = styled(CardActions)`\n  && {\n    display: flex;\n    justify-content: space-between;\n    padding: 0 12px 8px 12px;\n  }\n`;\n\nexport const CategoryDescription = styled(Typography)`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n","import React, { useMemo, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, CardContent, Typography } from '@material-ui/core';\nimport moment from 'moment';\n\nimport { Category } from 'models';\nimport { getCategoryImages } from 'common/utils';\nimport { DEFAULT_IMAGE_URL } from 'common/constants';\nimport ActionMenu, { ActionMenuItems } from 'components/ActionMenu';\n\nimport {\n  ImageWrapper,\n  TimeOverlay,\n  MoreButtonOverlay,\n  StyledCard,\n  StyledCardActions,\n  CategoryDescription\n} from './styles';\n\ninterface CategoryItemProps {\n  category: Category;\n  itemActions?: ActionMenuItems;\n}\n\nconst CategoryItem: React.FC<CategoryItemProps> = ({ category, itemActions }) => {\n  const history = useHistory();\n  const [timeHovered, setTimeHovered] = useState<boolean>(false);\n  const hasItemActions = itemActions != null;\n\n  const categoryImage = useMemo(\n    () => getCategoryImages(category).categoryImage ?? DEFAULT_IMAGE_URL,\n    [category]\n  );\n\n  const creationDateTime = useMemo(\n    () => moment(category.attributes.createdAt).format('MMM D, YYYY h:mm a'),\n    [category.attributes.createdAt]\n  );\n\n  return (\n    <StyledCard>\n      <ImageWrapper>\n        <img\n          src={categoryImage}\n          title={category.attributes.title}\n          alt={category.attributes.title}\n        />\n      </ImageWrapper>\n      <TimeOverlay>\n        <Typography\n          variant=\"body2\"\n          style={{ cursor: 'default' }}\n          onMouseEnter={() => setTimeHovered(true)}\n          onMouseLeave={() => setTimeHovered(false)}\n        >\n          {timeHovered\n            ? creationDateTime\n            : moment(category.attributes.createdAt).fromNow()}\n        </Typography>\n      </TimeOverlay>\n      {hasItemActions && (\n        <MoreButtonOverlay>\n          <ActionMenu color=\"white\" items={itemActions} />\n        </MoreButtonOverlay>\n      )}\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom style={{ marginBottom: '0.2em' }}>\n          {category.attributes.title}\n        </Typography>\n        <CategoryDescription variant=\"body2\" color=\"textSecondary\">\n          {category.attributes.description}\n        </CategoryDescription>\n      </CardContent>\n      <StyledCardActions>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => history.push(`/categories/${category.id}`)}\n        >\n          View details\n        </Button>\n      </StyledCardActions>\n    </StyledCard>\n  );\n};\n\nexport default CategoryItem;\n","import isEmpty from 'lodash/fp/isEmpty';\nimport { Category, Dish } from 'models';\nimport { CategoryImages, DishImages } from './types';\n\nexport const getCategoryImages = (category: Category): CategoryImages => {\n  const allImages = category.attributes.images;\n\n  if (isEmpty(allImages)) return { categoryAlbum: [] };\n\n  return {\n    categoryImage: allImages[0],\n    categoryAlbum: allImages.slice(1)\n  };\n};\n\nexport const getDishImages = (dish: Dish): DishImages => {\n  const allImages = dish.attributes.images;\n\n  if (isEmpty(allImages)) return { dishAlbum: [] };\n\n  return {\n    dishImage: allImages[0],\n    dishAlbum: allImages.slice(1)\n  };\n};\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport styled from 'styled-components';\nimport isEmpty from 'lodash/fp/isEmpty';\n\nimport { Category } from 'models';\nimport { BreakpointSet } from 'common/types';\nimport { ActionMenuItems } from 'components/ActionMenu';\nimport CategoryItem from 'components/CategoryItem';\n\nconst StyledGrid = styled(Grid)`\n  display: flex;\n  align-items: flex-start;\n`;\n\ninterface CategoryListProps {\n  categories: Category[];\n  emptyText?: string;\n  getItemActions?: (categoryId: string) => ActionMenuItems;\n  itemBreakpoints?: BreakpointSet;\n}\n\nconst CategoryList: React.FC<CategoryListProps> = ({\n  categories,\n  emptyText,\n  getItemActions,\n  itemBreakpoints\n}) => {\n  const hasItemActions = getItemActions != null;\n  \n  return isEmpty(categories) ? (\n    <Typography variant=\"body1\" color=\"textSecondary\">\n      {emptyText || 'No categories to show.'}\n    </Typography>\n  ) : (\n    <StyledGrid container spacing={3} alignItems=\"stretch\">\n      {categories.map(category => (\n        <Grid item key={`category-${category.id}`} {...itemBreakpoints}>\n          <CategoryItem\n            category={category}\n            itemActions={hasItemActions ? getItemActions(category.id) : undefined}\n          />\n        </Grid>\n      ))}\n    </StyledGrid>\n  );\n};\n\nexport default CategoryList;\n","import styled from 'styled-components';\nimport { Paper, Typography } from '@material-ui/core';\n\nexport const CustomPaper = styled(Paper)`\n  && {\n    padding: 1rem;\n    border-radius: 12px;\n    box-shadow: 0px 2px 12px -1px rgba(0, 0, 0, 0.2),\n      0px 1px 3px 0px rgba(0, 0, 0, 0.14),\n      0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n    .MuiTextField-root {\n      margin: 8px 0;\n    }\n\n    @media (min-width: 768px) and (max-width: 1279px) {\n      width: 50%;\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n`;\n\nexport const StyledForm = styled.form`\n  && {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n`;\n\nexport const FormHeading = styled(Typography)`\n  && {\n    width: 100%;\n    margin-bottom: 0.25rem;\n  }\n`;\n","import React, { useCallback, useState } from 'react';\nimport { Button, TextField } from '@material-ui/core';\n\nimport { RawCategory } from 'models';\nimport { useCreateCategoryApi, useFetchCategoriesApi } from 'common/hooks';\n\nimport { CustomPaper, StyledForm, FormHeading } from './styles';\n\ninterface CategoryFormData {\n  name: string;\n  title: string;\n  description: string;\n  imageUrl: string;\n}\n\nconst validateForm = (formData: CategoryFormData): boolean => {\n  if (!formData.name) {\n    window.alert('Category name should not be empty.');\n    return false;\n  }\n\n  if (formData.name.length > 50) {\n    window.alert('Category name should not be over 50 characters.');\n    return false;\n  }\n\n  if (formData.title.length > 70) {\n    window.alert('Title should be not be over 100 characters.');\n    return false;\n  }\n\n  if (formData.description.length > 150) {\n    window.alert('Description should be not be over 150 characters.');\n    return false;\n  }\n\n  return true;\n};\n\nconst CategoryForm: React.FC = () => {\n  const [formData, setFormData] = useState<CategoryFormData>({\n    name: '',\n    title: '',\n    description: '',\n    imageUrl: ''\n  });\n\n  const clearForm = useCallback(() => {\n    setFormData({\n      name: '',\n      title: '',\n      description: '',\n      imageUrl: ''\n    });\n  }, []);\n\n  const { fetchData: fetchCategories } = useFetchCategoriesApi();\n  const { loading: isCreatingCategory, fetchData: createCategory } =\n    useCreateCategoryApi({\n      onSuccess: () => {\n        clearForm();\n        fetchCategories({\n          include_dishes: false,\n          order_by: 'title',\n          order_direction: 'asc'\n        });\n      } \n    });\n\n  const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!validateForm(formData)) return;\n\n    const dataToSubmit: RawCategory = {\n      attributes: {\n        name: formData.name,\n        title: formData.title || formData.name,\n        description: formData.description,\n        images: formData.imageUrl ? [formData.imageUrl] : []\n      }\n    };\n    createCategory(dataToSubmit);\n  }, [formData]);\n\n  return (\n    <CustomPaper>\n      <StyledForm\n        id=\"category-form\"\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <FormHeading variant=\"h6\" align=\"center\">\n          {isCreatingCategory ? 'Creating your category...' : 'Create a category'}\n        </FormHeading>\n        <TextField\n          fullWidth\n          name=\"name\"\n          label=\"*Category name\"\n          variant=\"outlined\"\n          value={formData.name}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setFormData({ ...formData, name: e.target.value });\n          }}\n          disabled={isCreatingCategory}\n        />\n        <TextField\n          fullWidth\n          name=\"title\"\n          label=\"Title / Long name\"\n          variant=\"outlined\"\n          value={formData.title}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setFormData({ ...formData, title: e.target.value });\n          }}\n          disabled={isCreatingCategory}\n        />\n        <TextField\n          fullWidth\n          name=\"description\"\n          label=\"Description\"\n          variant=\"outlined\"\n          value={formData.description}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setFormData({ ...formData, description: e.target.value });\n          }}\n          disabled={isCreatingCategory}\n        />\n        <TextField\n          fullWidth\n          name=\"imageUrl\"\n          label=\"Category image URL\"\n          variant=\"outlined\"\n          value={formData.imageUrl}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setFormData({ ...formData, imageUrl: e.target.value });\n          }}\n          style={{ marginBottom: 16 }}\n          disabled={isCreatingCategory}\n        />\n        <Button\n          fullWidth\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          style={{ marginBottom: 10 }}\n          disabled={isCreatingCategory}\n        >\n          {isCreatingCategory ? 'Submitting...' : 'Submit'}\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={clearForm}\n          disabled={isCreatingCategory}\n        >\n          Clear\n        </Button>\n      </StyledForm>\n    </CustomPaper>\n  );\n};\n\nexport default CategoryForm;\n","import React from 'react';\nimport { Button, Typography } from '@material-ui/core';\n\nconst ErrorNotice: React.FC<{ fetchData?: () => void | Promise<void> }> = ({\n  children,\n  fetchData\n}) => {\n  const allowRetry = fetchData != null;\n\n  return (\n    <div style={{ marginBottom: '1rem' }}>\n      <Typography variant=\"h5\" color=\"textSecondary\" style={{ marginBottom: '0.5rem' }}>\n        {children}\n      </Typography>\n      {allowRetry && (\n        <Button variant=\"contained\" color=\"primary\" onClick={fetchData}>\n          Try again\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default ErrorNotice;\n","import styled from 'styled-components';\nimport { Button } from '@material-ui/core';\n\nexport const ResponsiveFormWrapper = styled.div<{ loading: boolean }>`\n  @media (max-width: 1279px) {\n    display: ${({ loading }) => loading ? 'none' : 'block'};\n  }\n`;\n\nexport const ResponsiveButton = styled(Button)`\n  && {\n    display: inline-flex;\n    margin-bottom: 6px;\n\n    @media (min-width: 1279px) {\n      display: none;\n    }\n  }\n`;\n","import React, { useCallback, useEffect } from 'react';\nimport { Container, Grow, Grid } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { useDeleteCategoryApi, useFetchCategoriesApi } from 'common/hooks';\nimport { ActionMenuItems } from 'components/ActionMenu';\nimport CategoryList from 'components/CategoryList';\nimport CategoryForm from 'components/CategoryForm';\nimport ErrorNotice from 'components/ErrorNotice';\n\nimport { ResponsiveButton, ResponsiveFormWrapper } from './styles';\n\nconst CategoryListingPage: React.FC = () => {\n  const {\n    fetchData: fetchCategories,\n    loading: isFetchingCategories,\n    data: categories,\n    error\n  } = useFetchCategoriesApi();\n\n  const errorOccurred = error != null;\n  const fetchCategoriesWithOptions = useCallback(() => {\n    fetchCategories({\n      include_dishes: false,\n      order_by: 'title',\n      order_direction: 'asc'\n    });\n  }, []);\n\n  const { fetchData: deleteCategory } = useDeleteCategoryApi({\n    onSuccess: fetchCategoriesWithOptions\n  });\n\n  const getItemActions = useCallback(\n    (categoryId: string): ActionMenuItems => ({\n      Delete: {\n        icon: DeleteIcon,\n        handler: () => {\n          if (window.confirm('Delete this category?')) deleteCategory(categoryId);\n        }\n      }\n    }),\n    []\n  );\n\n  useEffect(() => {\n    fetchCategoriesWithOptions();\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\" style={{ marginBottom: '3rem' }}>\n      <Grow in>\n        <Container>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12} lg={7}>\n              {errorOccurred && (\n                <ErrorNotice fetchData={fetchCategoriesWithOptions}>\n                  An error occurred while fetching the categories\n                  {error?.message ? ` (${error?.message})` : ''}.\n                </ErrorNotice>\n              )}\n              <ResponsiveButton\n                href=\"#category-form\"\n                variant=\"text\"\n                color=\"primary\"\n                startIcon={<AddIcon />}\n                disabled={isFetchingCategories}\n              >\n                Create a category\n              </ResponsiveButton>\n              <CategoryList\n                categories={categories}\n                emptyText={isFetchingCategories ? `We're getting the categories...` : undefined}\n                getItemActions={getItemActions}\n                itemBreakpoints={{ xs: 12, sm: 6, md: 4, lg: 6 }}\n              />\n            </Grid>\n            <Grid item xs={12} lg={4}>\n              <ResponsiveFormWrapper loading={isFetchingCategories}>\n                <CategoryForm />\n              </ResponsiveFormWrapper>\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n};\n\nexport default CategoryListingPage;\n","import { Swiper } from 'swiper/react/swiper-react';\nimport styled from 'styled-components';\n\nimport { APP_ACCENT_COLOR } from 'common/constants';\n\nexport const CustomSwiper = styled(Swiper)`\n.swiper-button-prev,\n.swiper-button-next {\n  height: 24px;\n  width: 24px;\n  padding: 6px;\n  border-radius: 50%;\n  background-color: rgba(0, 0, 0, 0.3);\n\n  &::after {\n    color: #e5e5e5;\n    font-size: 1rem;\n  }\n}\n\n.swiper-pagination {\n  padding: 6px;\n  border-radius: 12px;\n  background-color: rgba(255, 255, 255, 0.3);\n}\n\n.swiper-pagination-bullet.swiper-pagination-bullet-active-main {\n  background: ${APP_ACCENT_COLOR};\n}\n`;\n\nexport const AlbumImage = styled.img`\ndisplay: block;\nobject-fit: cover;\nwidth: 100%;\nheight: 480px;\nborder-radius: 10px;\n`;\n","import React from 'react';\nimport { Navigation, Pagination, Autoplay } from 'swiper';\nimport { SwiperSlide } from 'swiper/react/swiper-react';\nimport isEmpty from 'lodash/fp/isEmpty';\n\nimport { DEFAULT_IMAGE_URL } from 'common/constants';\n\nimport { AlbumImage, CustomSwiper } from './styles';\n\nimport 'swiper/swiper.min.css';\nimport 'swiper/modules/navigation/navigation.min.css';\nimport 'swiper/modules/pagination/pagination.min.css';\n\nconst AlbumSlider: React.FC<{ album: string[] }> = ({ album }) => {\n  return (\n    <CustomSwiper\n      modules={[Navigation, Pagination, Autoplay]}\n      spaceBetween={25}\n      slidesPerView={1}\n      autoplay={{ delay: 5000 }}\n      navigation\n      pagination={{ clickable: true, dynamicBullets: true }}\n      scrollbar={{ draggable: true }}\n      style={{ borderRadius: 10 }}\n    >\n      {isEmpty(album) && (\n        <SwiperSlide style={{ textAlign: 'center' }}>\n          <AlbumImage src={DEFAULT_IMAGE_URL} />\n        </SwiperSlide>\n      )}\n      {album.map((item, index) => (\n        <SwiperSlide key={`detail-img-${index}`} style={{ textAlign: 'center' }}>\n          <AlbumImage src={item} />\n        </SwiperSlide>\n      ))}\n    </CustomSwiper>\n  );\n};\n\nexport default AlbumSlider;\n","import styled from 'styled-components';\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionActions,\n  TextField,\n  IconButton\n} from '@material-ui/core';\n\nexport const CustomAccordion = styled(Accordion)`\n  && {\n    width: 100%;\n    border-radius: 8px;\n    box-shadow:\n      0px 2px 12px -1px rgba(0, 0, 0, 0.2),\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n      0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n\n    &::before {\n      content: none;\n    }\n\n    @media (min-width: 768px) {\n      width: 80%;\n    }\n\n    @media (min-width: 960px) {\n      width: 90%;\n    }\n  \n    @media (min-width: 1280px) {\n      width: 80%;\n    }\n  }\n`;\n\nexport const CustomAccordionDetails = styled(AccordionDetails)`\n  && {\n    display: flex;\n    flex-direction: column;\n    padding-top: 0;\n  }\n`;\n\nexport const CustomAccordionActions = styled(AccordionActions)`\n  && {\n    display: flex;\n    justify-content: flex-start;\n    padding-top: 0;\n  }\n`;\n\ninterface CustomTextFieldProps {\n  isFirst: boolean;\n  isLast: boolean;\n}\n\nconst getTextFieldStyles = (isFirst: boolean, isLast: boolean): string => {\n  if (isFirst) return 'margin-top: 0.5rem;';\n  if (isLast) return 'margin-top: 1rem; margin-bottom: 0;';\n  return 'margin-top: 1rem;';\n};\n\nexport const CustomTextField = styled(TextField)<CustomTextFieldProps>`\n  && {\n    ${({ isFirst, isLast }) => getTextFieldStyles(isFirst, isLast)}\n\n    > div {\n      padding: 0 8px;\n    }\n  }\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n  && {\n    margin: 0;\n    padding: 8px;\n    height: max-content;\n  }\n`;\n","import React, { useCallback, useState } from 'react';\nimport {\n  AccordionSummary,\n  InputAdornment,\n  Typography,\n  IconButton\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport compact from 'lodash/fp/compact';\nimport isEmpty from 'lodash/fp/isEmpty';\nimport isEqual from 'lodash/fp/isEqual';\n\nimport {\n  Category,\n  Dish,\n  PartialRawCategory,\n  PartialRawDish\n} from 'models';\n\nimport {\n  CustomAccordion,\n  CustomAccordionDetails,\n  CustomAccordionActions,\n  CustomTextField,\n  StyledIconButton\n} from './styles';\n\ntype SubmittedData = PartialRawCategory | PartialRawDish;\n\ninterface AlbumEditorProps {\n  data: Category | Dish;\n  updateData: (\n    id: string,\n    submittedData: SubmittedData\n  ) => void | Promise<void>;\n}\n\nconst MAX_IMAGES_ALLOWED = 5;\n\nconst generateDisplayAlbum = (actualAlbum: string[]): string[] =>\n  Array<string>(MAX_IMAGES_ALLOWED).fill('').map(\n    (emptyValue, index) => actualAlbum[index] || emptyValue\n  );\n\nconst AlbumEditor: React.FC<AlbumEditorProps> = ({ data, updateData }) => {\n  const actualAlbum = data.attributes.images;\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const [displayAlbum, setDisplayAlbum] = useState<string[]>(\n    generateDisplayAlbum(actualAlbum)\n  );\n\n  const onChange = useCallback(\n    (targetIndex: number) => (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = e.target.value;\n      const newDisplayAlbum = displayAlbum.map(\n        (value, index) => index === targetIndex ? newValue : value\n      );\n      setDisplayAlbum(newDisplayAlbum);\n    },\n    [displayAlbum]\n  );\n\n  const saveAlbum = useCallback(() => {\n    setExpanded(false);\n    const compactedDisplayAlbum = compact(displayAlbum);\n\n    if (isEqual(compactedDisplayAlbum, actualAlbum)) return;\n\n    const dataToSubmit: SubmittedData = {\n      attributes: {\n        images: compactedDisplayAlbum\n      }\n    };\n    updateData(data.id, dataToSubmit);\n  }, [displayAlbum, data.id]);\n\n  const reset = useCallback(() => {\n    setExpanded(false);\n    setDisplayAlbum(generateDisplayAlbum(actualAlbum));\n  }, [actualAlbum]);\n\n  return (\n    <CustomAccordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography variant=\"h6\">Edit album...</Typography>\n      </AccordionSummary>\n      <CustomAccordionDetails>\n        {displayAlbum.map((value, index) => {\n          const isFirst = index === 0;\n          const isLast = index === displayAlbum.length - 1;\n          const prevValue = displayAlbum[index - 1];\n          const nextValue = displayAlbum[index + 1];\n\n          const disabled =\n            !isEmpty(nextValue) || (!isFirst && isEmpty(value) && isEmpty(prevValue));\n\n          const placeholder = !disabled\n            ? (isFirst ? 'Enter your primary image URL' : 'Enter another image URL')\n            : undefined;\n\n          return (\n            <CustomTextField\n              key={`album-img-${index}`}\n              isFirst={isFirst}\n              isLast={isLast}\n              size=\"small\"\n              variant=\"outlined\"\n              disabled={disabled}\n              label={isFirst ? 'Primary image' : undefined}\n              placeholder={placeholder}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <PhotoIcon />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position=\"end\" style={{ marginLeft: 4 }}>\n                    <IconButton\n                      style={{ padding: 2 }}\n                      disabled={disabled}\n                      onClick={() => {\n                        const newDisplayAlbum = displayAlbum.map(\n                          (val, idx) => idx === index ? '' : val\n                        );\n                        setDisplayAlbum(newDisplayAlbum);\n                      }}\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                  </InputAdornment>\n                )\n              }}\n              value={value}\n              onChange={onChange(index)}\n            />\n          );\n        })}\n      </CustomAccordionDetails>\n      <CustomAccordionActions>\n        <StyledIconButton onClick={saveAlbum}>\n          <CheckIcon />\n        </StyledIconButton>\n        <StyledIconButton onClick={reset}>\n          <CloseIcon />\n        </StyledIconButton>\n      </CustomAccordionActions>\n    </CustomAccordion>\n  );\n};\n\nexport default AlbumEditor;\n","import styled from 'styled-components';\nimport { IconButton, TextField } from '@material-ui/core';\n\nexport const ViewModeWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 60px;\n  margin-bottom: 0.5rem;\n`;\n\nexport const EditModeWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  min-height: 60px;\n  margin-bottom: 0.5rem;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const EditModeButtons = styled.div`\n  margin-top: 5px;\n\n  @media (min-width: 768px) {\n    margin-top: 0;\n  }\n`;\n\nexport const StyledTextField = styled(TextField)`\n  > div {\n    font-size: 2.125rem;\n  }\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n  && {\n    padding: 8px;\n    height: max-content;\n  }\n`;\n","import React, { useCallback, useState } from 'react';\nimport { Typography } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport isEmpty from 'lodash/fp/isEmpty';\n\nimport { Category, Dish, PartialRawCategory, PartialRawDish } from 'models';\n\nimport {\n  StyledIconButton,\n  StyledTextField,\n  EditModeWrapper,\n  ViewModeWrapper,\n  EditModeButtons\n} from './styles';\n\ntype SubmittedData = PartialRawCategory | PartialRawDish;\n\ninterface EditableTitleProps {\n  data: Category | Dish;\n  updateData: (\n    id: string,\n    submittedData: SubmittedData\n  ) => void | Promise<void>;\n}\n\nconst EditableTitle: React.FC<EditableTitleProps> = ({ data, updateData }) => {\n  const originalValue = data.attributes.title;\n  const [displayValue, setDisplayValue] = useState<string>(originalValue);\n  const [editMode, setEditMode] = useState<boolean>(false);\n\n  const enterEditMode = () => setEditMode(true);\n\n  const exitEditMode = () => {\n    setEditMode(false);\n    setDisplayValue(originalValue);\n  };\n\n  const onChange =\n    (e: React.ChangeEvent<HTMLInputElement>) => setDisplayValue(e.target.value);\n\n  const saveNewValue = useCallback(() => {\n    setEditMode(false);\n\n    if (displayValue === originalValue) return;\n    if (isEmpty(displayValue)) {\n      window.alert('Title must not be empty.');\n      setDisplayValue(originalValue);\n      return;\n    }\n\n    const dataToSubmit: SubmittedData = {\n      attributes: {\n        title: displayValue\n      }\n    };\n    updateData(data.id, dataToSubmit);\n  }, [data.id, displayValue, originalValue]);\n\n  return editMode ? (\n    <EditModeWrapper>\n      <StyledTextField\n        size=\"medium\"\n        variant=\"standard\"\n        value={displayValue}\n        onChange={onChange}\n        inputRef={(input?: HTMLInputElement) => {\n          if (input) input.focus();\n        }}\n      />\n      <EditModeButtons>\n        <StyledIconButton onClick={saveNewValue}>\n          <CheckIcon />\n        </StyledIconButton>\n        <StyledIconButton onClick={exitEditMode}>\n          <CloseIcon />\n        </StyledIconButton>\n      </EditModeButtons>\n    </EditModeWrapper>\n  ) : (\n    <ViewModeWrapper>\n      <Typography variant=\"h4\">{displayValue}</Typography>\n      <StyledIconButton onClick={enterEditMode} style={{ marginLeft: 8 }}>\n        <EditIcon />\n      </StyledIconButton>\n    </ViewModeWrapper>\n  );\n};\n\nexport default EditableTitle;\n","import styled from 'styled-components';\nimport { IconButton, TextField } from '@material-ui/core';\n\nexport const StyledIconButton = styled(IconButton)`\n  && {\n    padding: 8px;\n    height: max-content;\n  }\n`;\n\nexport const StyledTextArea = styled(TextField)`\n  width: 100%;\n\n  @media (min-width: 768px) {\n    width: 80%;\n  }\n\n  @media (min-width: 960px) {\n    width: 90%;\n  }\n\n  @media (min-width: 1280px) {\n    width: 80%;\n  }\n`;\n\nexport const ViewModeWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  min-height: 42px;\n  margin-bottom: 1.25rem;\n  width: 100%;\n\n  @media (min-width: 768px) {\n    width: 90%;\n  }\n\n  @media (min-width: 960px) {\n    width: 100%;\n  }\n\n  @media (min-width: 1280px) {\n    width: 90%;\n  }\n`;\n\nexport const EditModeWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1.5rem;\n`;\n","import React, { useCallback, useState } from 'react';\nimport { Typography } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport isEmpty from 'lodash/fp/isEmpty';\n\nimport { Category, Dish, PartialRawCategory, PartialRawDish } from 'models';\n\nimport {\n  EditModeWrapper,\n  ViewModeWrapper,\n  StyledIconButton,\n  StyledTextArea\n} from './styles';\n\ntype SubmittedData = PartialRawCategory | PartialRawDish;\n\ninterface EditableDescriptionProps {\n  data: Category | Dish;\n  updateData: (\n    id: string,\n    submittedData: SubmittedData\n  ) => void | Promise<void>;\n}\n\nconst EditableDescription: React.FC<EditableDescriptionProps> = ({\n  data,\n  updateData\n}) => {\n  const originalValue = data.attributes.description ?? '';\n  const [displayValue, setDisplayValue] = useState<string>(originalValue);\n  const [editMode, setEditMode] = useState<boolean>(false);\n\n  const enterEditMode = () => setEditMode(true);\n\n  const exitEditMode = () => {\n    setEditMode(false);\n    setDisplayValue(originalValue);\n  };\n\n  const onChange =\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => setDisplayValue(e.target.value);\n\n  const saveNewValue = useCallback(() => {\n    setEditMode(false);\n\n    if (displayValue === originalValue) return;\n    if (isEmpty(displayValue) && !window.confirm('Empty out description?')) {\n      setDisplayValue(originalValue);\n      return;\n    }\n\n    const dataToSubmit: SubmittedData = {\n      attributes: {\n        description: displayValue\n      }\n    };\n    updateData(data.id, dataToSubmit);\n  }, [data.id, displayValue, originalValue]);\n\n  return editMode ? (\n    <EditModeWrapper>\n      <StyledTextArea\n        multiline\n        variant=\"standard\"\n        value={displayValue}\n        onChange={onChange}\n        inputRef={(input?: HTMLTextAreaElement) => {\n          if (input) input.focus();\n        }}\n      />\n      <div style={{ marginTop: 5 }}>\n        <StyledIconButton onClick={saveNewValue}>\n          <CheckIcon />\n        </StyledIconButton>\n        <StyledIconButton onClick={exitEditMode}>\n          <CloseIcon />\n        </StyledIconButton>\n      </div>\n    </EditModeWrapper>\n  ) : (\n    <ViewModeWrapper>\n      <Typography\n        variant=\"body1\"\n        color=\"textSecondary\"\n        component=\"pre\"\n        style={{ lineHeight: 'normal', whiteSpace: 'pre-line' }}\n      >\n        {displayValue || 'No description.'}\n      </Typography>\n      <StyledIconButton onClick={enterEditMode} style={{ marginLeft: 4 }}>\n        <EditIcon />\n      </StyledIconButton>\n    </ViewModeWrapper>\n  );\n};\n\nexport default EditableDescription;\n","import styled from 'styled-components';\nimport { Card, CardActions, IconButton, Typography } from '@material-ui/core';\n\nexport const ImageWrapper = styled.div`\n  position:relative;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.8) 0%, rgba(0, 0, 0, 0) 40%);\n    z-index: 1;\n  }\n\n  img {\n    display: block;\n    object-fit: cover;\n    width: 360px;\n    height: 240px;\n    z-index: 0;\n  }\n`;\n\nexport const TimeOverlay = styled.div`\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  color: white;\n  z-index: 2;\n`;\n\nexport const MoreButtonOverlay = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  color: white;\n  z-index: 2;\n`;\n\nexport const StyledCard = styled(Card)`\n  && {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    border-radius: 15px;\n    height: 100%;\n    justify-content: space-between;\n    box-shadow:\n      0px 2px 12px -1px rgba(0, 0, 0, 0.2),\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14),\n      0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const StyledCardActions = styled(CardActions)`\n  && {\n    display: flex;\n    justify-content: space-between;\n    padding: 0 12px 8px 12px;\n  }\n`;\n\nexport const CategoryDescription = styled(Typography)`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n  && {\n    padding: 6px;\n    height: max-content;\n  }\n`;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Button, CardContent, Typography } from '@material-ui/core';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport moment from 'moment';\nimport * as api from 'api';\n\nimport { Dish } from 'models';\nimport { getDishImages } from 'common/utils';\nimport { DEFAULT_IMAGE_URL } from 'common/constants';\nimport ActionMenu, { ActionMenuItems } from 'components/ActionMenu';\n\nimport {\n  ImageWrapper,\n  MoreButtonOverlay,\n  StyledCard,\n  StyledCardActions,\n  TimeOverlay,\n  CategoryDescription,\n  StyledIconButton\n} from './styles';\n\ninterface DishItemProps {\n  dish: Dish;\n  itemActions?: ActionMenuItems;\n}\n\nconst DishItem: React.FC<DishItemProps> = ({ dish, itemActions = {} }) => {\n  const history = useHistory();\n  const [timeHovered, setTimeHovered] = useState<boolean>(false);\n  const [liked, setLiked] = useState<boolean>(dish.attributes.likeCount > 0);\n  const hasItemActions = itemActions != null;\n\n  const dishImage = useMemo(\n    () => getDishImages(dish).dishImage ?? DEFAULT_IMAGE_URL,\n    [dish]\n  );\n\n  const creationDateTime = useMemo(\n    () => moment(dish.attributes.createdAt).format('MMM D, YYYY h:mm a'),\n    [dish.attributes.createdAt]\n  );\n\n  const handleClickLikeButton = useCallback(() => {\n    const dishId = dish.id;\n\n    if (liked) {\n      api.unlikeDish(dishId);\n    } else {\n      api.likeDish(dishId);\n    }\n    setLiked(!liked);\n  }, [dish.id, liked]);\n\n  return (\n    <StyledCard>\n      <ImageWrapper>\n        <img\n          src={dishImage}\n          title={dish.attributes.title}\n          alt={dish.attributes.title}\n        />\n      </ImageWrapper>\n      <TimeOverlay>\n        <Typography\n          variant=\"body2\"\n          style={{ cursor: 'default' }}\n          onMouseEnter={() => setTimeHovered(true)}\n          onMouseLeave={() => setTimeHovered(false)}\n        >\n          {timeHovered\n            ? creationDateTime\n            : moment(dish.attributes.createdAt).fromNow()}\n        </Typography>\n      </TimeOverlay>\n      {hasItemActions && (\n        <MoreButtonOverlay>\n          <ActionMenu color=\"white\" items={itemActions} />\n        </MoreButtonOverlay>\n      )}\n      <CardContent>\n        <Typography variant=\"h5\" gutterBottom style={{ marginBottom: '0.2em' }}>\n          {dish.attributes.title}\n        </Typography>\n        <CategoryDescription variant=\"body2\" color=\"textSecondary\">\n          {dish.attributes.description}\n        </CategoryDescription>\n      </CardContent>\n      <StyledCardActions>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          onClick={() => history.push(`/dishes/${dish.id}`)}\n        >\n          View details\n        </Button>\n        <StyledIconButton\n          color=\"secondary\"\n          onClick={handleClickLikeButton}\n        >\n          {liked ? <FavoriteIcon /> : <FavoriteBorderIcon />}\n        </StyledIconButton>\n      </StyledCardActions>\n    </StyledCard>\n  );\n};\n\nexport default DishItem;\n","import React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport styled from 'styled-components';\nimport isEmpty from 'lodash/fp/isEmpty';\n\nimport { Dish } from 'models';\nimport { BreakpointSet } from 'common/types';\nimport { ActionMenuItems } from 'components/ActionMenu';\nimport DishItem from 'components/DishItem';\n\nconst StyledGrid = styled(Grid)`\n  display: flex;\n  align-items: flex-start;\n`;\n\ninterface DishListProps {\n  dishes: Dish[];\n  emptyText?: string;\n  getItemActions?: (dishId: string) => ActionMenuItems;\n  itemBreakpoints?: BreakpointSet;\n}\n\nconst DishList: React.FC<DishListProps> = ({\n  dishes,\n  emptyText,\n  getItemActions,\n  itemBreakpoints\n}) => {\n  const hasItemActions = getItemActions != null;\n\n  return isEmpty(dishes) ? (\n    <Typography variant=\"body1\" color=\"textSecondary\">\n      {emptyText || 'No dishes to show.'}\n    </Typography>\n  ) : (\n    <StyledGrid container spacing={3} alignItems=\"stretch\">\n      {dishes.map(dish => (\n        <Grid item key={`dish-${dish.id}`} {...itemBreakpoints}>\n          <DishItem\n            dish={dish}\n            itemActions={hasItemActions ? getItemActions(dish.id) : undefined}\n          />\n        </Grid>\n      ))}\n    </StyledGrid>\n  );\n};\n\nexport default DishList;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport isEmpty from 'lodash/fp/isEmpty';\nimport includes from 'lodash/fp/includes';\nimport {\n  Button,\n  Checkbox,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControlLabel,\n  FormGroup,\n  Typography\n} from '@material-ui/core';\n\nimport { Category, PartialRawCategory } from 'models';\nimport { useFetchDishesApi } from 'common/hooks';\n\ninterface CategoryAssignmentDialogProps {\n  open: boolean;\n  closeDialog: () => void;\n  data: Category;\n  updateData: (\n    id: string,\n    submittedData: PartialRawCategory\n  ) => void | Promise<void>;\n}\n\nconst CategoryAssignmentDialog: React.FC<CategoryAssignmentDialogProps> = ({\n  open,\n  closeDialog,\n  data,\n  updateData\n}) => {\n  const initialSelectedIds = useMemo(\n    () => data.relationships?.dishes.data.map(item => item.id) ?? [],\n    [data]\n  );\n\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  const { data: dishes, loading: isFetchingDishes, fetchData: fetchDishes } =\n    useFetchDishesApi();\n\n  const handleChange = useCallback(\n    (targetId: string) =>\n      (_: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\n        if (checked)\n          setSelectedIds([...selectedIds, targetId]);\n        else\n          setSelectedIds(selectedIds.filter(id => id !== targetId));\n      },\n    [selectedIds]\n  );\n\n  const handleCancel = useCallback(() => {\n    setSelectedIds(initialSelectedIds);\n    closeDialog();\n  }, [initialSelectedIds]);\n\n  const handleSubmit = useCallback(() => {\n    const dataToSubmit: PartialRawCategory = {\n      attributes: {\n        dish_ids: selectedIds\n      }\n    };\n    updateData(data.id, dataToSubmit);\n    closeDialog();\n  }, [data.id, selectedIds]);\n\n  useEffect(() => {\n    if (open && isEmpty(dishes))\n      fetchDishes({\n        include_categories: false,\n        order_by: 'title',\n        order_direction: 'asc'\n      });\n  }, [open, dishes]);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  return (\n    <Dialog maxWidth=\"xs\" open={open}>\n      <DialogTitle>Assign dishes to the category</DialogTitle>\n      <DialogContent dividers style={{ maxHeight: 360 }}>\n        <FormGroup>\n          {isEmpty(dishes) && isFetchingDishes && (\n            <Typography variant=\"body1\" color=\"textSecondary\">\n              Hang tight, we&apos;re fetching the dishes...\n            </Typography>\n          )}\n          {dishes.map(item => (\n            <FormControlLabel\n              key={item.id}\n              label={item.attributes.title}\n              checked={includes(item.id, selectedIds)}\n              control={<Checkbox color=\"secondary\" onChange={handleChange(item.id)} />}\n            />\n          ))}\n        </FormGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus variant=\"text\" color=\"primary\" onClick={handleCancel}>\n          Cancel\n        </Button>\n        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default CategoryAssignmentDialog;\n","import styled from 'styled-components';\n\nexport const FlexWrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\nmargin-bottom: 1.5rem;\n\nbutton {\n  margin-top: 0.5rem;\n\n  @media (min-width: 768px) {\n    margin-top: 0;\n    margin-left: 1rem;\n  }\n}\n\n@media (min-width: 768px) {\n  flex-direction: row;\n  align-items: center;\n}\n`;\n","import React, { useState } from 'react';\nimport { Button, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { Category, Dish, PartialRawCategory } from 'models';\nimport { ActionMenuItems } from 'components/ActionMenu';\nimport CategoryAssignmentList from 'components/DishList';\nimport CategoryAssignmentDialog from 'components/CategoryAssignmentDialog';\n\nimport { FlexWrapper } from './styles';\n\ninterface CategoryAssignmentProps {\n  category: Category;\n  assignedDishes: Dish[];\n  updateCategory: (\n    id: string,\n    submittedData: PartialRawCategory\n  ) => void | Promise<void>;\n  getItemActions?: (dishId: string) => ActionMenuItems;\n}\n\nconst CategoryAssignment: React.FC<CategoryAssignmentProps> = ({\n  category,\n  assignedDishes,\n  updateCategory,\n  getItemActions\n}) => {\n  const [open, setOpen] = useState<boolean>(false);\n\n  return (\n    <>\n      <FlexWrapper>\n        <Typography variant=\"h5\" color=\"textPrimary\">\n          Dishes assigned to this category\n        </Typography>\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          startIcon={<AddIcon />}\n          onClick={() => setOpen(true)}\n        >\n          Assign dishes\n        </Button>\n        <CategoryAssignmentDialog\n          open={open}\n          closeDialog={() => setOpen(false)}\n          data={category}\n          updateData={updateCategory}\n        />\n      </FlexWrapper>\n      <CategoryAssignmentList\n        dishes={assignedDishes}\n        emptyText=\"There isn't any dish yet. Would you like to add one?\"\n        getItemActions={getItemActions}\n        itemBreakpoints={{ xs: 12, sm: 6, md: 3 }}\n      />\n    </>\n  );\n};\n\nexport default CategoryAssignment;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Typography } from '@material-ui/core';\nimport styled from 'styled-components';\n\nimport { APP_ACCENT_COLOR } from 'common/constants';\n\nconst BackToListWrapper = styled.div`\n  a {\n    text-decoration: none;\n  }\n\n  h2 {\n    display: inline-block;\n    color: ${APP_ACCENT_COLOR};\n    font-size: 1.25rem;\n    font-weight: 600;\n    margin: 0 0 1rem 0;\n    transition: color 0.15s ease;\n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Oxygen,\n      Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue, sans-serif;\n  }\n`;\n\nconst BackToListButton: React.FC<{ href: string }> = ({ href }) => (\n  <BackToListWrapper>\n    <Link to={href}>\n      <Typography variant=\"h2\" color=\"textPrimary\">\n        &larr;{' '}Back to list\n      </Typography>\n    </Link>\n  </BackToListWrapper>\n);\n\nexport default BackToListButton;\n","import React, { useCallback, useEffect } from 'react';\nimport { Container, Grid, Typography } from '@material-ui/core';\nimport RemoveIcon from '@material-ui/icons/RemoveCircleOutline';\n\nimport { PartialRawCategory } from 'models';\nimport { RouterIdPageProps } from 'common/types';\nimport { useGetCategoryApi, useUpdateCategoryApi } from 'common/hooks';\nimport { ActionMenuItems } from 'components/ActionMenu';\nimport AlbumSlider from 'components/AlbumSlider';\nimport AlbumEditor from 'components/AlbumEditor';\nimport EditableTitle from 'components/EditableTitle';\nimport EditableDescription from 'components/EditableDescription';\nimport CategoryAssignment from 'components/CategoryAssignment';\nimport BackToListButton from 'components/BackToListButton';\nimport ErrorNotice from 'components/ErrorNotice';\n\nconst CategoryPage: React.FC<RouterIdPageProps> = ({ match: { params } }) => {\n  const {\n    data: category,\n    includedData: assignedDishes,\n    loading: isFetchingCategory,\n    fetchData: fetchCategory,\n    error\n  } = useGetCategoryApi();\n\n  const errorOccurred = error != null;\n  const dataIsReady = category != null;\n  const fetchCategoryWithOptions = useCallback(\n    () => fetchCategory(params.id, { include_dishes: true }),\n    []\n  );\n\n  const { fetchData: updateCategory } =\n    useUpdateCategoryApi({ onSuccess: fetchCategoryWithOptions });\n\n  const getItemActions = useCallback(\n    (dishId: string): ActionMenuItems => ({\n      'Unassign from category': {\n        icon: RemoveIcon,\n        handler: () => {\n          if (!dataIsReady || !window.confirm('Unassign this dish?')) return;\n  \n          const currentDishIds =\n            category.relationships?.dishes.data.map(item => item.id) ?? [];\n  \n          const dataToSubmit: PartialRawCategory = {\n            attributes: {\n              dish_ids: currentDishIds.filter(item => item !== dishId)\n            }\n          };\n          updateCategory(category.id, dataToSubmit);\n        }\n      }\n    }),\n    [category]\n  );\n\n  useEffect(() => {\n    fetchCategoryWithOptions();\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <BackToListButton href=\"/categories\" />\n      {!dataIsReady && isFetchingCategory && (\n        <Typography\n          variant=\"h5\"\n          color=\"textSecondary\"\n          style={{ marginBottom: '0.5em' }}\n        >\n          We&apos;re fetching the category...\n        </Typography>\n      )}\n      {errorOccurred && (\n        <ErrorNotice fetchData={fetchCategoryWithOptions}>\n          An error occurred while fetching the category\n          {error?.message ? ` (${error?.message})` : ''}.\n        </ErrorNotice>\n      )}\n      {dataIsReady && (\n        <Grid container spacing={4}>\n          <Grid item xs={12} md={6}>\n            <AlbumSlider album={category.attributes.images} />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <EditableTitle data={category} updateData={updateCategory} />\n            <EditableDescription data={category} updateData={updateCategory} />\n            <AlbumEditor data={category} updateData={updateCategory} />\n          </Grid>\n          <Grid item xs={12} style={{ margin: '1.5rem 0' }}>\n            <CategoryAssignment\n              category={category}\n              assignedDishes={assignedDishes}\n              updateCategory={updateCategory}\n              getItemActions={getItemActions}\n            />\n          </Grid>\n        </Grid>\n      )}\n    </Container>\n  );\n};\n\nexport default CategoryPage;\n","import styled from 'styled-components';\nimport { Paper, Typography } from '@material-ui/core';\n\nexport const CustomPaper = styled(Paper)`\n  && {\n    padding: 1rem;\n    border-radius: 12px;\n    box-shadow: 0px 2px 12px -1px rgba(0, 0, 0, 0.2),\n      0px 1px 3px 0px rgba(0, 0, 0, 0.14),\n      0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n    .MuiTextField-root {\n      margin: 8px 0;\n    }\n\n    @media (min-width: 768px) and (max-width: 1279px) {\n      width: 50%;\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n`;\n\nexport const StyledForm = styled.form`\n  && {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n`;\n\nexport const FormHeading = styled(Typography)`\n  && {\n    width: 100%;\n    margin-bottom: 0.25rem;\n  }\n`;\n","import React, { useCallback, useState } from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport isEmpty from 'lodash/fp/isEmpty';\n\nimport { RawDish } from 'models';\nimport { useCreateDishApi, useFetchDishesApi } from 'common/hooks';\n\nimport { CustomPaper, StyledForm, FormHeading } from './styles';\n\ninterface DishFormData {\n  name: string;\n  title: string;\n  description: string;\n  imageUrl: string;\n  places: string;\n}\nconst validateForm = (formData: DishFormData): boolean => {\n  if (!formData.name) {\n    window.alert('Dish name should not be empty.');\n    return false;\n  }\n\n  if (formData.name.length > 50) {\n    window.alert('Dish name should not be over 50 characters.');\n    return false;\n  }\n\n  if (formData.title.length > 70) {\n    window.alert('Title should be not be over 100 characters.');\n    return false;\n  }\n\n  if (formData.description.length > 150) {\n    window.alert('Description should be not be over 150 characters.');\n    return false;\n  }\n\n  return true;\n};\n\nconst DishForm: React.FC = () => {\n  const [formData, setFormData] = useState<DishFormData>({\n    name: '',\n    title: '',\n    description: '',\n    imageUrl: '',\n    places: ''\n  });\n\n  const clearForm = useCallback(() => {\n    setFormData({\n      name: '',\n      title: '',\n      description: '',\n      imageUrl: '',\n      places: ''\n    });\n  }, []);\n\n  const { fetchData: fetchDishes } = useFetchDishesApi();\n  const { fetchData: createDish, loading: isCreatingDish } =\n    useCreateDishApi({\n      onSuccess: () => {\n        clearForm();\n        fetchDishes({\n          include_categories: false,\n          order_by: 'title',\n          order_direction: 'asc'\n        });\n      }\n    });\n\n  const handleSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!validateForm(formData)) return;\n\n    const dataToSubmit: RawDish = {\n      attributes: {\n        name: formData.name,\n        title: formData.title || formData.name,\n        description: formData.description,\n        images: formData.imageUrl ? [formData.imageUrl] : [],\n        places: formData.places\n          ? formData.places\n            .split(',')\n            .map(item => item.trim())\n            .filter(item => !isEmpty(item))\n          : []\n      }\n    };\n    createDish(dataToSubmit);\n  }, [formData]);\n\n  return (\n    <CustomPaper>\n      <StyledForm\n        id=\"dish-form\"\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <FormHeading variant=\"h6\" align=\"center\">\n          {isCreatingDish ? 'Creating your dish...' : 'Create a dish'}\n        </FormHeading>\n        <TextField\n          fullWidth\n          name=\"name\"\n          label=\"*Dish name\"\n          variant=\"outlined\"\n          value={formData.name}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setFormData({ ...formData, name: e.target.value });\n          }}\n          disabled={isCreatingDish}\n        />\n        <TextField\n          fullWidth\n          name=\"title\"\n          label=\"Title / Long name\"\n          variant=\"outlined\"\n          value={formData.title}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setFormData({ ...formData, title: e.target.value });\n          }}\n          disabled={isCreatingDish}\n        />\n        <TextField\n          fullWidth\n          name=\"description\"\n          label=\"Description\"\n          variant=\"outlined\"\n          value={formData.description}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setFormData({ ...formData, description: e.target.value });\n          }}\n          disabled={isCreatingDish}\n        />\n        <TextField\n          fullWidth\n          name=\"imageUrl\"\n          label=\"Dish image URL\"\n          variant=\"outlined\"\n          value={formData.imageUrl}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setFormData({ ...formData, imageUrl: e.target.value });\n          }}\n          disabled={isCreatingDish}\n        />\n        <TextField\n          fullWidth\n          name=\"places\"\n          label=\"Where to find\"\n          variant=\"outlined\"\n          value={formData.places}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setFormData({ ...formData, places: e.target.value });\n          }}\n          style={{ marginBottom: 16 }}\n          disabled={isCreatingDish}\n        />\n        <Button\n          fullWidth\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          style={{ marginBottom: 10 }}\n          disabled={isCreatingDish}\n        >\n          {isCreatingDish ? 'Submitting...' : 'Submit'}\n        </Button>\n        <Button\n          fullWidth\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={clearForm}\n          disabled={isCreatingDish}\n        >\n          Clear\n        </Button>\n      </StyledForm>\n    </CustomPaper>\n  );\n};\n\nexport default DishForm;\n","import styled from 'styled-components';\nimport { Button } from '@material-ui/core';\n\nexport const ResponsiveFormWrapper = styled.div<{ loading: boolean }>`\n  @media (max-width: 1279px) {\n    display: ${({ loading }) => loading ? 'none' : 'block'};\n  }\n`;\n\nexport const ResponsiveButton = styled(Button)`\n  && {\n    display: inline-flex;\n    margin-bottom: 6px;\n\n    @media (min-width: 1279px) {\n      display: none;\n    }\n  }\n`;\n","import React, { useEffect, useCallback } from 'react';\nimport { Container, Grow, Grid } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { useDeleteDishApi, useFetchDishesApi } from 'common/hooks';\nimport { ActionMenuItems } from 'components/ActionMenu';\nimport DishList from 'components/DishList';\nimport DishForm from 'components/DishForm';\nimport ErrorNotice from 'components/ErrorNotice';\n\nimport { ResponsiveButton, ResponsiveFormWrapper } from './styles';\n\nconst DishListingPage: React.FC = () => {\n  const {\n    fetchData: fetchDishes,\n    loading: isFetchingDishes,\n    data: dishes,\n    error\n  } = useFetchDishesApi();\n\n  const errorOccurred = error != null;\n  const fetchDishesWithOptions = useCallback(() => {\n    fetchDishes({\n      include_categories: false,\n      order_by: 'title',\n      order_direction: 'asc'\n    });\n  }, []);\n\n  const { fetchData: deleteDish } = useDeleteDishApi({\n    onSuccess: fetchDishesWithOptions\n  });\n\n  const getItemActions = useCallback(\n    (dishId: string): ActionMenuItems => ({\n      Delete: {\n        icon: DeleteIcon,\n        handler: () => {\n          if (window.confirm('Delete this dish?')) deleteDish(dishId);\n        }\n      }\n    }),\n    []\n  );\n\n  useEffect(() => {\n    fetchDishesWithOptions();\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\" style={{ marginBottom: '3rem' }}>\n      <Grow in>\n        <Container>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            alignItems=\"stretch\"\n            spacing={3}\n          >\n            <Grid item xs={12} lg={7}>\n              {errorOccurred && (\n                <ErrorNotice fetchData={fetchDishesWithOptions}>\n                  An error occurred while fetching the dishes\n                  {error?.message ? ` (${error?.message})` : ''}.\n                </ErrorNotice>\n              )}\n              <ResponsiveButton\n                href=\"#dish-form\"\n                variant=\"text\"\n                color=\"primary\"\n                startIcon={<AddIcon />}\n                disabled={isFetchingDishes}\n              >\n                Create a dish\n              </ResponsiveButton>\n              <DishList\n                dishes={dishes}\n                emptyText={isFetchingDishes ? `We're getting the dishes...` : undefined}\n                getItemActions={getItemActions}\n                itemBreakpoints={{ xs: 12, sm: 6, md: 4, lg: 6 }}\n              />\n            </Grid>\n            <Grid item xs={12} lg={4}>\n              <ResponsiveFormWrapper loading={isFetchingDishes}>\n                <DishForm />\n              </ResponsiveFormWrapper>\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n};\n\nexport default DishListingPage;\n","import styled from 'styled-components';\nimport { IconButton, TextField } from '@material-ui/core';\n\nexport const StyledTextField = styled(TextField)`\n  width: 100%;\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n  && {\n    padding: 8px;\n    height: max-content;\n  }\n`;\n\nexport const EditModeWrapper = styled.div`\n  display: block;\n  width: 100%;\n\n  @media (min-width: 768px) {\n    width: 80%;\n  }\n\n  @media (min-width: 960px) {\n    width: 90%;\n  }\n\n  @media (min-width: 1280px) {\n    width: 80%;\n  }\n`;\n\nexport const ViewModeWrapper = styled.div`\n  display: flex;\n`;\n","import React, { useCallback, useState } from 'react';\nimport {\n  IconButton,\n  InputAdornment,\n  Snackbar,\n  Typography\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport HelpIcon from '@material-ui/icons/HelpOutline';\nimport isEmpty from 'lodash/fp/isEmpty';\n\nimport { Dish, PartialRawDish } from 'models';\n\nimport {\n  StyledTextField,\n  StyledIconButton,\n  EditModeWrapper,\n  ViewModeWrapper\n} from './styles';\n\ninterface EditablePlacesProps {\n  places: string[];\n  data: Dish;\n  updateData: (\n    id: string,\n    submittedData: PartialRawDish\n  ) => void | Promise<void>;\n}\n\nconst EditablePlaces: React.FC<EditablePlacesProps> = ({\n  places,\n  data,\n  updateData\n}) => {\n  const originalValue = places.join(', ');\n  const [displayValue, setDisplayValue] = useState<string>(originalValue);\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const [showHelpText, setShowHelpText] = useState<boolean>(false);\n\n  const enterEditMode = () => setEditMode(true);\n\n  const exitEditMode = () => {\n    setEditMode(false);\n    setDisplayValue(originalValue);\n  };\n\n  const onChange =\n    (e: React.ChangeEvent<HTMLInputElement>) => setDisplayValue(e.target.value);\n\n  const saveNewValue = useCallback(() => {\n    setEditMode(false);\n\n    if (displayValue === originalValue) return;\n    if (isEmpty(displayValue) && !window.confirm('Remove all existing places?')) {\n      setDisplayValue(originalValue);\n      return;\n    }\n\n    const dataToSubmit: PartialRawDish = {\n      attributes: {\n        places: !isEmpty(displayValue)\n          ? displayValue\n            .split(',')\n            .map(item => item.trim())\n            .filter(item => !isEmpty(item))\n          : []\n      }\n    };\n    updateData(data.id, dataToSubmit);\n  }, [data.id, displayValue, originalValue]);\n\n  return (\n    <div style={{ marginBottom: '1.5rem' }}>\n      <Typography variant=\"body1\" color=\"textSecondary\" style={{ marginBottom: 4 }}>\n        Where to find:\n      </Typography>\n      {editMode ? (\n        <EditModeWrapper>\n          <StyledTextField\n            size=\"medium\"\n            variant=\"standard\"\n            value={displayValue}\n            onChange={onChange}\n            inputRef={(input?: HTMLInputElement) => {\n              if (input) input.focus();\n            }}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    style={{ padding: 2 }}\n                    onClick={() => setShowHelpText(true)}\n                  >\n                    <HelpIcon />\n                  </IconButton>\n                  <Snackbar\n                    open={showHelpText}\n                    message=\"Enter your places separated by commas\"\n                    action={\n                      <StyledIconButton onClick={() => setShowHelpText(false)}>\n                        <CloseIcon style={{ color: '#fff' }} />\n                      </StyledIconButton>\n                    }\n                  />\n                </InputAdornment>\n              )\n            }}\n          />\n          <div style={{ marginTop: 4 }}>\n            <StyledIconButton onClick={saveNewValue}>\n              <CheckIcon />\n            </StyledIconButton>\n            <StyledIconButton onClick={exitEditMode}>\n              <CloseIcon />\n            </StyledIconButton>\n          </div>\n        </EditModeWrapper>\n      ) : (\n        <ViewModeWrapper>\n          {!isEmpty(places) ? (\n            <ul style={{ margin: 0 }}>\n              {places.map((item, index) => (\n                <li key={`place-${index}`}>\n                  <Typography variant=\"body1\" color=\"textSecondary\">{item}</Typography>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <Typography\n              variant=\"body1\"\n              color=\"textSecondary\"\n              style={{ padding: '0.5rem 0.75rem' }}\n            >\n              No places added yet. Let&apos;s add a few!\n            </Typography>\n          )}\n          <StyledIconButton onClick={enterEditMode} style={{ marginLeft: 8 }}>\n            <EditIcon />\n          </StyledIconButton>\n        </ViewModeWrapper>\n      )}\n    </div>\n  );\n};\n\nexport default EditablePlaces;\n","import React, { useCallback, useEffect } from 'react';\nimport { Container, Grid, Typography } from '@material-ui/core';\n\nimport { useGetDishApi, useUpdateDishApi } from 'common/hooks';\nimport { RouterIdPageProps } from 'common/types';\nimport CategoryList from 'components/CategoryList';\nimport AlbumSlider from 'components/AlbumSlider';\nimport AlbumEditor from 'components/AlbumEditor';\nimport EditableTitle from 'components/EditableTitle';\nimport EditableDescription from 'components/EditableDescription';\nimport BackToListButton from 'components/BackToListButton';\nimport ErrorNotice from 'components/ErrorNotice';\nimport EditablePlaces from 'components/EditablePlaces';\n\nconst DishPage: React.FC<RouterIdPageProps> = ({ match: { params } }) => {\n  const {\n    data: dish,\n    includedData: categories,\n    loading: isFetchingDish,\n    fetchData: fetchDish,\n    error\n  } = useGetDishApi();\n\n  const errorOccurred = error != null;\n  const dataIsReady = dish != null;\n  const places = dish?.attributes.places ?? [];\n  const fetchDishWithOptions = useCallback(\n    () => fetchDish(params.id, { include_categories: true }),\n    []\n  );\n\n  const { fetchData: updateDish } =\n    useUpdateDishApi({ onSuccess: fetchDishWithOptions });\n\n  useEffect(() => {\n    fetchDishWithOptions();\n  }, []);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <BackToListButton href=\"/dishes\" />\n      {!dataIsReady && isFetchingDish && (\n        <Typography\n          variant=\"h5\"\n          color=\"textSecondary\"\n          style={{ marginBottom: '0.5em' }}\n        >\n          We&apos;re fetching the dish...\n        </Typography>\n      )}\n      {errorOccurred && (\n        <ErrorNotice fetchData={fetchDishWithOptions}>\n          An error occurred while fetching the dish\n          {error?.message ? ` (${error?.message})` : ''}.\n        </ErrorNotice>\n      )}\n      {dataIsReady && (\n        <Grid container spacing={4}>\n          <Grid item xs={12} md={6}>\n            <AlbumSlider album={dish.attributes.images} />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <EditableTitle data={dish} updateData={updateDish} />\n            <EditableDescription data={dish} updateData={updateDish} />\n            <EditablePlaces places={places} data={dish} updateData={updateDish} />\n            <AlbumEditor data={dish} updateData={updateDish} />\n          </Grid>\n          <Grid item xs={12} style={{ margin: '1.5rem 0' }}>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n              style={{ marginBottom: '1.5rem' }}\n            >\n              Categories that the dish is assigned to:\n            </Typography>\n            <CategoryList\n              categories={categories}\n              emptyText=\"This dish has not yet been added to any categories.\"\n              itemBreakpoints={{ xs: 12, sm: 6, md: 3 }}\n            />\n          </Grid>\n        </Grid>\n      )}\n    </Container>\n  );\n};\n\nexport default DishPage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, Container } from '@material-ui/core';\n\nimport { pingingSelector } from 'appState/selectors';\n\nconst Playground: React.FC = () => {\n  const isPinging = useSelector(pingingSelector);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <div>{isPinging ? 'PING' : 'PONG'}</div>\n      <Button\n        color=\"primary\"\n        variant=\"contained\"\n      >\n        PING\n      </Button>\n    </Container>\n  );\n};\n\nexport default Playground;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n/* Pages */\nimport HomePage from './HomePage';\nimport CategoryListingPage from './CategoryListingPage';\nimport CategoryPage from './CategoryPage';\nimport DishListingPage from './DishListingPage';\nimport DishPage from './DishPage';\nimport Playground from './Playground';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route exact path=\"/\" component={HomePage} />\n    <Route exact path=\"/categories\" component={CategoryListingPage} />\n    <Route exact path=\"/categories/:id\" component={CategoryPage} />\n    <Route exact path=\"/dishes\" component={DishListingPage} />\n    <Route exact path=\"/dishes/:id\" component={DishPage} />\n    <Route exact path=\"/playground\" component={Playground} />\n  </Switch>\n);\n\nexport default Routes;\n","import { AppBar, Typography } from '@material-ui/core';\nimport styled from 'styled-components';\n\nimport { APP_ACCENT_COLOR } from 'common/constants';\n\nexport const WTDAppBar = styled(AppBar)`\n  && {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    border-radius: 15px;\n    padding: 4px;\n    margin: 20px 0;\n\n    @media (min-width: 768px) {\n      margin: 30px 0;\n    }\n  }\n`;\n\nexport const AppBarIcon = styled.img`\n  && {\n    display: block;\n    height: 60px;\n    margin-right: 15px;\n  }\n`;\n\nexport const AppBarHeading = styled(Typography)`\n  && {\n    color: ${APP_ACCENT_COLOR};\n    font-weight: 300;\n    font-size: 2rem;\n\n    @media (min-width: 768px) {\n      font-size: 3rem;\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/dish.8a7d6f6a.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container } from '@material-ui/core';\n\nimport { AppBarHeading, AppBarIcon, WTDAppBar } from './styles';\nimport dishImage from 'common/images/dish.png';\n\nconst APP_NAME = `What's The Dish?`;\n\nconst WhatsTheDishAppBar: React.FC = () => (\n  <Container maxWidth=\"lg\">\n    <WTDAppBar position=\"static\" color=\"inherit\">\n      <Link to=\"/\">\n        <AppBarIcon src={dishImage} alt=\"dishIcon\" />\n      </Link>\n      <AppBarHeading variant=\"h3\" align=\"center\">\n        {APP_NAME}\n      </AppBarHeading>\n    </WTDAppBar>\n  </Container>\n);\n\nexport default React.memo(WhatsTheDishAppBar);\n","import React from 'react';\nimport { LinearProgress } from '@material-ui/core';\nimport styled from 'styled-components';\n\nimport { useAppLoading } from 'common/hooks';\n\nconst StyledProgress = styled(LinearProgress)`\n  && {\n    position: fixed !important;\n    top: 0;\n    left: 0;\n    right: 0;\n    width: 100%;\n    z-index: 9999;\n  }\n`;\n\nconst AppProgress: React.FC = () => {\n  const { loading } = useAppLoading();\n\n  return (\n    <StyledProgress\n      color=\"primary\"\n      style={{ visibility: loading ? 'visible' : 'hidden' }}\n    />\n  );\n};\n\nexport default AppProgress;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Routes from 'pages';\nimport AppBar from 'components/AppBar';\nimport AppProgress from 'components/AppProgress';\n\nconst App: React.FC = () => (\n  <BrowserRouter>\n    <div className=\"app\">\n      <AppProgress />\n      <AppBar />\n      <div className=\"page\">\n        <Routes />\n      </div>\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from 'appState/store';\n\nimport App from './App';\nimport './index.css';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}