version: "3.9"

networks: # a common network within which every container will be operating
  common_network:
    driver: bridge

volumes: # data volumes for containers
  db_data:
    driver: local
  pgadmin_data:
    driver: local

services: # configurations for every containerized service are listed here
  db: # a common database server
    container_name: db
    image: postgres:13-alpine
    networks:
      - common_network
    restart: always
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
    volumes:
      - db_data:/var/lib/postgresql/data

  # pgadmin: # pgadmin4 for administering all databases
    # container_name: pgadmin
    # image: dpage/pgadmin4:latest
    # networks:
    #   - common_network
    # restart: always
    # ports:
    #   - "${PGADMIN_PORT}:${PGADMIN_LISTEN_PORT}"
    # environment:
    #   PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
    #   PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    #   PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
    # volumes:
    #   - pgadmin_data:/var/lib/pgadmin

  auth: # auth-service
    container_name: auth
    image: anhdau185/auth-service:latest
    networks:
      - common_network
    restart: always
    ports:
      - "${AUTH_API_PORT}:${AUTH_API_PORT}"
    depends_on:
      - db
    links:
      - db

  dish: # dish-api
    container_name: dish
    image: registry.digitalocean.com/anhdau185/dish-api:latest
    networks:
      - common_network
    restart: always
    ports:
      - "${DISH_API_PORT}:5000"
    depends_on:
      - db
    links:
      - db
